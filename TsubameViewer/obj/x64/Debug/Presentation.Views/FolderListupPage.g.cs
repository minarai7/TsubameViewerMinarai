#pragma checksum "C:\Users\tor4k\source\repos\TsubameViewer\TsubameViewer\Presentation.Views\FolderListupPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "32C5D42162FC0627F5EE456D35D5F1E4865368E5B94B5D90982556C7D0B9CA95"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TsubameViewer.Presentation.Views
{
    partial class FolderListupPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_AdaptiveGridView_ItemClickCommand(global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.ItemClickCommand = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_XYFocusUp(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.DependencyObject value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.DependencyObject) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.DependencyObject), targetNullValue);
                }
                obj.XYFocusUp = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_XYFocusRight(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.DependencyObject value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.DependencyObject) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.DependencyObject), targetNullValue);
                }
                obj.XYFocusRight = value;
            }
            public static void Set_Windows_UI_Xaml_Documents_Run_Text(global::Windows.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_WindowsStateTriggers_EqualsStateTrigger_Value(global::WindowsStateTriggers.EqualsStateTrigger obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_WindowsStateTriggers_EqualsStateTrigger_EqualTo(global::WindowsStateTriggers.EqualsStateTrigger obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.EqualTo = value;
            }
            public static void Set_Windows_UI_Xaml_StateTrigger_IsActive(global::Windows.UI.Xaml.StateTrigger obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class FolderListupPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IFolderListupPage_Bindings
        {
            private global::TsubameViewer.Presentation.Views.FolderListupPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj4;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj5;
            private global::Windows.UI.Xaml.Controls.DropDownButton obj7;
            private global::Windows.UI.Xaml.Controls.DropDownButton obj9;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj10;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj11;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj12;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj13;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj14;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj15;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj16;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj17;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj18;
            private global::Windows.UI.Xaml.Controls.Border obj19;
            private global::Windows.UI.Xaml.Controls.Button obj20;
            private global::Windows.UI.Xaml.Controls.Button obj21;
            private global::Windows.UI.Xaml.Documents.Run obj22;
            private global::Windows.UI.Xaml.Documents.Run obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj25;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj26;
            private global::Windows.UI.Xaml.Controls.Button obj27;
            private global::WindowsStateTriggers.EqualsStateTrigger obj28;
            private global::WindowsStateTriggers.EqualsStateTrigger obj29;
            private global::Windows.UI.Xaml.StateTrigger obj30;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj27Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj4ItemClickCommandDisabled = false;
            private static bool isobj4XYFocusUpDisabled = false;
            private static bool isobj4SelectedItemDisabled = false;
            private static bool isobj5CommandDisabled = false;
            private static bool isobj7ContentDisabled = false;
            private static bool isobj9ContentDisabled = false;
            private static bool isobj10CommandDisabled = false;
            private static bool isobj11CommandDisabled = false;
            private static bool isobj12CommandDisabled = false;
            private static bool isobj13CommandDisabled = false;
            private static bool isobj14CommandDisabled = false;
            private static bool isobj15CommandDisabled = false;
            private static bool isobj16CommandDisabled = false;
            private static bool isobj17CommandDisabled = false;
            private static bool isobj18CommandDisabled = false;
            private static bool isobj19VisibilityDisabled = false;
            private static bool isobj20CommandDisabled = false;
            private static bool isobj20CommandParameterDisabled = false;
            private static bool isobj21CommandDisabled = false;
            private static bool isobj21CommandParameterDisabled = false;
            private static bool isobj21XYFocusRightDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj25CommandDisabled = false;
            private static bool isobj25CommandParameterDisabled = false;
            private static bool isobj26CommandDisabled = false;
            private static bool isobj26CommandParameterDisabled = false;
            private static bool isobj28ValueDisabled = false;
            private static bool isobj29EqualToDisabled = false;
            private static bool isobj30IsActiveDisabled = false;

            private FolderListupPage_obj1_BindingsTracking bindingsTracking;

            public FolderListupPage_obj1_Bindings()
            {
                this.bindingsTracking = new FolderListupPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 187 && columnNumber == 9)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 196 && columnNumber == 9)
                {
                    isobj4ItemClickCommandDisabled = true;
                }
                else if (lineNumber == 203 && columnNumber == 9)
                {
                    isobj4XYFocusUpDisabled = true;
                }
                else if (lineNumber == 204 && columnNumber == 9)
                {
                    isobj4SelectedItemDisabled = true;
                }
                else if (lineNumber == 218 && columnNumber == 41)
                {
                    isobj5CommandDisabled = true;
                }
                else if (lineNumber == 107 && columnNumber == 29)
                {
                    isobj7ContentDisabled = true;
                }
                else if (lineNumber == 147 && columnNumber == 29)
                {
                    isobj9ContentDisabled = true;
                }
                else if (lineNumber == 153 && columnNumber == 87)
                {
                    isobj10CommandDisabled = true;
                }
                else if (lineNumber == 155 && columnNumber == 104)
                {
                    isobj11CommandDisabled = true;
                }
                else if (lineNumber == 160 && columnNumber == 104)
                {
                    isobj12CommandDisabled = true;
                }
                else if (lineNumber == 165 && columnNumber == 99)
                {
                    isobj13CommandDisabled = true;
                }
                else if (lineNumber == 170 && columnNumber == 99)
                {
                    isobj14CommandDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 96)
                {
                    isobj15CommandDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 96)
                {
                    isobj16CommandDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 91)
                {
                    isobj17CommandDisabled = true;
                }
                else if (lineNumber == 128 && columnNumber == 91)
                {
                    isobj18CommandDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 19)
                {
                    isobj19VisibilityDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 21)
                {
                    isobj20CommandDisabled = true;
                }
                else if (lineNumber == 95 && columnNumber == 21)
                {
                    isobj20CommandParameterDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 19)
                {
                    isobj21CommandDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 58)
                {
                    isobj21CommandParameterDisabled = true;
                }
                else if (lineNumber == 85 && columnNumber == 21)
                {
                    isobj21XYFocusRightDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 20)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 80)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 39 && columnNumber == 24)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 111)
                {
                    isobj25CommandDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 152)
                {
                    isobj25CommandParameterDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 120)
                {
                    isobj26CommandDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 167)
                {
                    isobj26CommandParameterDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 63)
                {
                    this.obj27.Click -= obj27Click;
                }
                else if (lineNumber == 276 && columnNumber == 37)
                {
                    isobj28ValueDisabled = true;
                }
                else if (lineNumber == 249 && columnNumber == 78)
                {
                    isobj29EqualToDisabled = true;
                }
                else if (lineNumber == 234 && columnNumber == 27)
                {
                    isobj30IsActiveDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Presentation.Views\FolderListupPage.xaml line 186
                        this.obj4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        this.bindingsTracking.RegisterTwoWayListener_4(this.obj4);
                        break;
                    case 5: // Presentation.Views\FolderListupPage.xaml line 218
                        this.obj5 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    case 7: // Presentation.Views\FolderListupPage.xaml line 105
                        this.obj7 = (global::Windows.UI.Xaml.Controls.DropDownButton)target;
                        break;
                    case 9: // Presentation.Views\FolderListupPage.xaml line 146
                        this.obj9 = (global::Windows.UI.Xaml.Controls.DropDownButton)target;
                        break;
                    case 10: // Presentation.Views\FolderListupPage.xaml line 153
                        this.obj10 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 11: // Presentation.Views\FolderListupPage.xaml line 155
                        this.obj11 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 12: // Presentation.Views\FolderListupPage.xaml line 160
                        this.obj12 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 13: // Presentation.Views\FolderListupPage.xaml line 165
                        this.obj13 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 14: // Presentation.Views\FolderListupPage.xaml line 170
                        this.obj14 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 15: // Presentation.Views\FolderListupPage.xaml line 113
                        this.obj15 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 16: // Presentation.Views\FolderListupPage.xaml line 118
                        this.obj16 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 17: // Presentation.Views\FolderListupPage.xaml line 123
                        this.obj17 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 18: // Presentation.Views\FolderListupPage.xaml line 128
                        this.obj18 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 19: // Presentation.Views\FolderListupPage.xaml line 90
                        this.obj19 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 20: // Presentation.Views\FolderListupPage.xaml line 93
                        this.obj20 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 21: // Presentation.Views\FolderListupPage.xaml line 82
                        this.obj21 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 22: // Presentation.Views\FolderListupPage.xaml line 80
                        this.obj22 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 23: // Presentation.Views\FolderListupPage.xaml line 80
                        this.obj23 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 24: // Presentation.Views\FolderListupPage.xaml line 39
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 25: // Presentation.Views\FolderListupPage.xaml line 45
                        this.obj25 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 26: // Presentation.Views\FolderListupPage.xaml line 53
                        this.obj26 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 27: // Presentation.Views\FolderListupPage.xaml line 62
                        this.obj27 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj27Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot._vm.Selection.EndSelection();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj27Click;
                        break;
                    case 28: // Presentation.Views\FolderListupPage.xaml line 276
                        this.obj28 = (global::WindowsStateTriggers.EqualsStateTrigger)target;
                        break;
                    case 29: // Presentation.Views\FolderListupPage.xaml line 249
                        this.obj29 = (global::WindowsStateTriggers.EqualsStateTrigger)target;
                        break;
                    case 30: // Presentation.Views\FolderListupPage.xaml line 234
                        this.obj30 = (global::Windows.UI.Xaml.StateTrigger)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IFolderListupPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::TsubameViewer.Presentation.Views.FolderListupPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TsubameViewer.Presentation.Views.FolderListupPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm(obj._vm, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_OpenItemCommand(obj.OpenItemCommand, phase);
                        this.Update_FileSortButton(obj.FileSortButton, phase);
                        this.Update_SelectionChangeCommand(obj.SelectionChangeCommand, phase);
                        this.Update_ChangetoImageListupButton(obj.ChangetoImageListupButton, phase);
                    }
                }
                this.Update_TsubameViewer_Models_Domain_StorageItemTypes_Folder(global::TsubameViewer.Models.Domain.StorageItemTypes.Folder, phase);
            }
            private void Update__vm(global::TsubameViewer.Presentation.ViewModels.FolderListupPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FileItemsView(obj.FileItemsView, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FolderLastIntractItem(obj.FolderLastIntractItem, phase);
                        this.Update__vm_SelectedFileSortType(obj.SelectedFileSortType, phase);
                        this.Update__vm_SelectedChildFileSortType(obj.SelectedChildFileSortType, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__vm_ChangeChildFileSortCommand(obj.ChangeChildFileSortCommand, phase);
                        this.Update__vm_ChangeFileSortCommand(obj.ChangeFileSortCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_HasFileItem(obj.HasFileItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__vm_OpenImageListupCommand(obj.OpenImageListupCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_CurrentFolderItem(obj.CurrentFolderItem, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__vm_OpenPageCommand(obj.OpenPageCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FoldersManagementPageName(obj.FoldersManagementPageName, phase);
                        this.Update__vm_DisplayCurrentPath(obj.DisplayCurrentPath, phase);
                        this.Update__vm_DisplayCurrentArchiveFolderName(obj.DisplayCurrentArchiveFolderName, phase);
                        this.Update__vm_SelectedCountDisplayText(obj.SelectedCountDisplayText, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FileDeleteCommand(obj.FileDeleteCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_Selection(obj.Selection, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__vm_OpenWithExplorerCommand(obj.OpenWithExplorerCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FolderItems(obj.FolderItems, phase);
                    }
                }
            }
            private void Update__vm_FileItemsView(global::Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 186
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_OpenItemCommand(global::Microsoft.Toolkit.Mvvm.Input.RelayCommand<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 186
                    if (!isobj4ItemClickCommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_AdaptiveGridView_ItemClickCommand(this.obj4, obj, null);
                    }
                }
            }
            private void Update_FileSortButton(global::Windows.UI.Xaml.Controls.DropDownButton obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 186
                    if (!isobj4XYFocusUpDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_XYFocusUp(this.obj4, obj, null);
                    }
                }
            }
            private void Update__vm_FolderLastIntractItem(global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_FolderLastIntractItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FolderLastIntractItem_Value(obj.Value, phase);
                    }
                }
            }
            private void Update__vm_FolderLastIntractItem_Value(global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_FolderLastIntractItem_Value(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 186
                    if (!isobj4SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj4, obj, null);
                    }
                }
            }
            private void Update_SelectionChangeCommand(global::Microsoft.Toolkit.Mvvm.Input.RelayCommand<global::System.Object> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 218
                    if (!isobj5CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj5, obj, null);
                    }
                }
            }
            private void Update__vm_SelectedFileSortType(global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_SelectedFileSortType(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_SelectedFileSortType_Value(obj.Value, phase);
                    }
                }
            }
            private void Update__vm_SelectedFileSortType_Value(global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 105
                    if (!isobj7ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj7, (global::System.Object)this.LookupConverter("LocalizeConverter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update__vm_SelectedChildFileSortType(global::Reactive.Bindings.ReactivePropertySlim<global::System.Nullable<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType>> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_SelectedChildFileSortType(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_SelectedChildFileSortType_Value(obj.Value, phase);
                    }
                }
            }
            private void Update__vm_SelectedChildFileSortType_Value(global::System.Nullable<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 146
                    if (!isobj9ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj9, (global::System.Object)this.LookupConverter("LocalizeConverter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update__vm_ChangeChildFileSortCommand(global::Prism.Commands.DelegateCommand<global::System.Object> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 153
                    if (!isobj10CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj10, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 155
                    if (!isobj11CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj11, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 160
                    if (!isobj12CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj12, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 165
                    if (!isobj13CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj13, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 170
                    if (!isobj14CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj14, obj, null);
                    }
                }
            }
            private void Update__vm_ChangeFileSortCommand(global::Prism.Commands.DelegateCommand<global::System.Object> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 113
                    if (!isobj15CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj15, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 118
                    if (!isobj16CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj16, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 123
                    if (!isobj17CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj17, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 128
                    if (!isobj18CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj18, obj, null);
                    }
                }
            }
            private void Update__vm_HasFileItem(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 90
                    if (!isobj19VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj19, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update__vm_OpenImageListupCommand(global::TsubameViewer.Presentation.ViewModels.PageNavigation.Commands.OpenImageListupCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 93
                    if (!isobj20CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                    }
                }
            }
            private void Update__vm_CurrentFolderItem(global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_CurrentFolderItem(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 93
                    if (!isobj20CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj20, obj, null);
                    }
                }
            }
            private void Update__vm_OpenPageCommand(global::TsubameViewer.Presentation.ViewModels.PageNavigation.Commands.OpenPageCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 82
                    if (!isobj21CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj21, obj, null);
                    }
                }
            }
            private void Update__vm_FoldersManagementPageName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 82
                    if (!isobj21CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj21, obj, null);
                    }
                }
            }
            private void Update_ChangetoImageListupButton(global::Windows.UI.Xaml.Controls.Button obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 82
                    if (!isobj21XYFocusRightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_XYFocusRight(this.obj21, obj, null);
                    }
                }
            }
            private void Update__vm_DisplayCurrentPath(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 80
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj22, obj, null);
                    }
                }
            }
            private void Update__vm_DisplayCurrentArchiveFolderName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 80
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update__vm_SelectedCountDisplayText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 39
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                    }
                }
            }
            private void Update__vm_FileDeleteCommand(global::TsubameViewer.Presentation.ViewModels.SourceFolders.Commands.FileDeleteCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 45
                    if (!isobj25CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj25, obj, null);
                    }
                }
            }
            private void Update__vm_Selection(global::TsubameViewer.Presentation.ViewModels.SelectionContext obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_Selection(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_Selection_SelectedItems(obj.SelectedItems, phase);
                        this.Update__vm_Selection_IsSelectionModeEnabled(obj.IsSelectionModeEnabled, phase);
                    }
                }
            }
            private void Update__vm_Selection_SelectedItems(global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_Selection_SelectedItems(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 45
                    if (!isobj25CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj25, obj, null);
                    }
                    // Presentation.Views\FolderListupPage.xaml line 53
                    if (!isobj26CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj26, obj, null);
                    }
                }
            }
            private void Update__vm_OpenWithExplorerCommand(global::TsubameViewer.Presentation.ViewModels.PageNavigation.Commands.OpenWithExplorerCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 53
                    if (!isobj26CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj26, obj, null);
                    }
                }
            }
            private void Update__vm_FolderItems(global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__vm_FolderItems(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__vm_FolderItems_Count(obj.Count, phase);
                    }
                }
            }
            private void Update__vm_FolderItems_Count(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 276
                    if (!isobj28ValueDisabled)
                    {
                        XamlBindingSetters.Set_WindowsStateTriggers_EqualsStateTrigger_Value(this.obj28, obj, null);
                    }
                }
            }
            private void Update_TsubameViewer_Models_Domain_StorageItemTypes_Folder(global::TsubameViewer.Models.Domain.StorageItemTypes obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 249
                    if (!isobj29EqualToDisabled)
                    {
                        XamlBindingSetters.Set_WindowsStateTriggers_EqualsStateTrigger_EqualTo(this.obj29, obj, null);
                    }
                }
            }
            private void Update__vm_Selection_IsSelectionModeEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation.Views\FolderListupPage.xaml line 234
                    if (!isobj30IsActiveDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_StateTrigger_IsActive(this.obj30, obj);
                    }
                }
            }
            private void UpdateTwoWay_4_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot._vm != null)
                        {
                            if (this.dataRoot._vm.FolderLastIntractItem != null)
                            {
                                this.dataRoot._vm.FolderLastIntractItem.Value = (global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel)this.obj4.SelectedItem;
                            }
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class FolderListupPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<FolderListupPage_obj1_Bindings> weakRefToBindingObj; 

                public FolderListupPage_obj1_BindingsTracking(FolderListupPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<FolderListupPage_obj1_Bindings>(obj);
                }

                public FolderListupPage_obj1_Bindings TryGetBindingObject()
                {
                    FolderListupPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners__vm(null);
                    UpdateChildListeners__vm_FolderLastIntractItem(null);
                    UpdateChildListeners__vm_FolderLastIntractItem_Value(null);
                    UpdateChildListeners__vm_SelectedFileSortType(null);
                    UpdateChildListeners__vm_SelectedChildFileSortType(null);
                    UpdateChildListeners__vm_CurrentFolderItem(null);
                    UpdateChildListeners__vm_Selection(null);
                    UpdateChildListeners__vm_Selection_SelectedItems(null);
                    UpdateChildListeners__vm_FolderItems(null);
                }

                public void PropertyChanged__vm(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TsubameViewer.Presentation.ViewModels.FolderListupPageViewModel obj = sender as global::TsubameViewer.Presentation.ViewModels.FolderListupPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__vm_FolderLastIntractItem(obj.FolderLastIntractItem, DATA_CHANGED);
                                bindings.Update__vm_SelectedFileSortType(obj.SelectedFileSortType, DATA_CHANGED);
                                bindings.Update__vm_SelectedChildFileSortType(obj.SelectedChildFileSortType, DATA_CHANGED);
                                bindings.Update__vm_HasFileItem(obj.HasFileItem, DATA_CHANGED);
                                bindings.Update__vm_CurrentFolderItem(obj.CurrentFolderItem, DATA_CHANGED);
                                bindings.Update__vm_FoldersManagementPageName(obj.FoldersManagementPageName, DATA_CHANGED);
                                bindings.Update__vm_DisplayCurrentPath(obj.DisplayCurrentPath, DATA_CHANGED);
                                bindings.Update__vm_DisplayCurrentArchiveFolderName(obj.DisplayCurrentArchiveFolderName, DATA_CHANGED);
                                bindings.Update__vm_SelectedCountDisplayText(obj.SelectedCountDisplayText, DATA_CHANGED);
                                bindings.Update__vm_Selection(obj.Selection, DATA_CHANGED);
                                bindings.Update__vm_FolderItems(obj.FolderItems, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "FolderLastIntractItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_FolderLastIntractItem(obj.FolderLastIntractItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedFileSortType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_SelectedFileSortType(obj.SelectedFileSortType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedChildFileSortType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_SelectedChildFileSortType(obj.SelectedChildFileSortType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HasFileItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_HasFileItem(obj.HasFileItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentFolderItem":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_CurrentFolderItem(obj.CurrentFolderItem, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FoldersManagementPageName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_FoldersManagementPageName(obj.FoldersManagementPageName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DisplayCurrentPath":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_DisplayCurrentPath(obj.DisplayCurrentPath, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DisplayCurrentArchiveFolderName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_DisplayCurrentArchiveFolderName(obj.DisplayCurrentArchiveFolderName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedCountDisplayText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_SelectedCountDisplayText(obj.SelectedCountDisplayText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Selection":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_Selection(obj.Selection, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FolderItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_FolderItems(obj.FolderItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TsubameViewer.Presentation.ViewModels.FolderListupPageViewModel cache__vm = null;
                public void UpdateChildListeners__vm(global::TsubameViewer.Presentation.ViewModels.FolderListupPageViewModel obj)
                {
                    if (obj != cache__vm)
                    {
                        if (cache__vm != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm).PropertyChanged -= PropertyChanged__vm;
                            cache__vm = null;
                        }
                        if (obj != null)
                        {
                            cache__vm = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm;
                        }
                    }
                }
                public void PropertyChanged__vm_FolderLastIntractItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__vm_FolderLastIntractItem_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_FolderLastIntractItem_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> cache__vm_FolderLastIntractItem = null;
                public void UpdateChildListeners__vm_FolderLastIntractItem(global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj)
                {
                    if (obj != cache__vm_FolderLastIntractItem)
                    {
                        if (cache__vm_FolderLastIntractItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_FolderLastIntractItem).PropertyChanged -= PropertyChanged__vm_FolderLastIntractItem;
                            cache__vm_FolderLastIntractItem = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_FolderLastIntractItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_FolderLastIntractItem;
                        }
                    }
                }
                public void PropertyChanged__vm_FolderLastIntractItem_Value(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel obj = sender as global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel cache__vm_FolderLastIntractItem_Value = null;
                public void UpdateChildListeners__vm_FolderLastIntractItem_Value(global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel obj)
                {
                    if (obj != cache__vm_FolderLastIntractItem_Value)
                    {
                        if (cache__vm_FolderLastIntractItem_Value != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_FolderLastIntractItem_Value).PropertyChanged -= PropertyChanged__vm_FolderLastIntractItem_Value;
                            cache__vm_FolderLastIntractItem_Value = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_FolderLastIntractItem_Value = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_FolderLastIntractItem_Value;
                        }
                    }
                }
                public void PropertyChanged__vm_SelectedFileSortType(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__vm_SelectedFileSortType_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_SelectedFileSortType_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType> cache__vm_SelectedFileSortType = null;
                public void UpdateChildListeners__vm_SelectedFileSortType(global::Reactive.Bindings.ReactivePropertySlim<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType> obj)
                {
                    if (obj != cache__vm_SelectedFileSortType)
                    {
                        if (cache__vm_SelectedFileSortType != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_SelectedFileSortType).PropertyChanged -= PropertyChanged__vm_SelectedFileSortType;
                            cache__vm_SelectedFileSortType = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_SelectedFileSortType = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_SelectedFileSortType;
                        }
                    }
                }
                public void PropertyChanged__vm_SelectedChildFileSortType(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Reactive.Bindings.ReactivePropertySlim<global::System.Nullable<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType>> obj = sender as global::Reactive.Bindings.ReactivePropertySlim<global::System.Nullable<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType>>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__vm_SelectedChildFileSortType_Value(obj.Value, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Value":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_SelectedChildFileSortType_Value(obj.Value, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Reactive.Bindings.ReactivePropertySlim<global::System.Nullable<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType>> cache__vm_SelectedChildFileSortType = null;
                public void UpdateChildListeners__vm_SelectedChildFileSortType(global::Reactive.Bindings.ReactivePropertySlim<global::System.Nullable<global::TsubameViewer.Models.Domain.FolderItemListing.FileSortType>> obj)
                {
                    if (obj != cache__vm_SelectedChildFileSortType)
                    {
                        if (cache__vm_SelectedChildFileSortType != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_SelectedChildFileSortType).PropertyChanged -= PropertyChanged__vm_SelectedChildFileSortType;
                            cache__vm_SelectedChildFileSortType = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_SelectedChildFileSortType = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_SelectedChildFileSortType;
                        }
                    }
                }
                public void PropertyChanged__vm_CurrentFolderItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel obj = sender as global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel cache__vm_CurrentFolderItem = null;
                public void UpdateChildListeners__vm_CurrentFolderItem(global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel obj)
                {
                    if (obj != cache__vm_CurrentFolderItem)
                    {
                        if (cache__vm_CurrentFolderItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_CurrentFolderItem).PropertyChanged -= PropertyChanged__vm_CurrentFolderItem;
                            cache__vm_CurrentFolderItem = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_CurrentFolderItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_CurrentFolderItem;
                        }
                    }
                }
                public void PropertyChanged__vm_Selection(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TsubameViewer.Presentation.ViewModels.SelectionContext obj = sender as global::TsubameViewer.Presentation.ViewModels.SelectionContext;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__vm_Selection_SelectedItems(obj.SelectedItems, DATA_CHANGED);
                                bindings.Update__vm_Selection_IsSelectionModeEnabled(obj.IsSelectionModeEnabled, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_Selection_SelectedItems(obj.SelectedItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsSelectionModeEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_Selection_IsSelectionModeEnabled(obj.IsSelectionModeEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TsubameViewer.Presentation.ViewModels.SelectionContext cache__vm_Selection = null;
                public void UpdateChildListeners__vm_Selection(global::TsubameViewer.Presentation.ViewModels.SelectionContext obj)
                {
                    if (obj != cache__vm_Selection)
                    {
                        if (cache__vm_Selection != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_Selection).PropertyChanged -= PropertyChanged__vm_Selection;
                            cache__vm_Selection = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_Selection = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_Selection;
                        }
                    }
                }
                public void PropertyChanged__vm_Selection_SelectedItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__vm_Selection_SelectedItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> cache__vm_Selection_SelectedItems = null;
                public void UpdateChildListeners__vm_Selection_SelectedItems(global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj)
                {
                    if (obj != cache__vm_Selection_SelectedItems)
                    {
                        if (cache__vm_Selection_SelectedItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_Selection_SelectedItems).PropertyChanged -= PropertyChanged__vm_Selection_SelectedItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__vm_Selection_SelectedItems).CollectionChanged -= CollectionChanged__vm_Selection_SelectedItems;
                            cache__vm_Selection_SelectedItems = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_Selection_SelectedItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_Selection_SelectedItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__vm_Selection_SelectedItems;
                        }
                    }
                }
                public void PropertyChanged__vm_FolderItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__vm_FolderItems_Count(obj.Count, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Count":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__vm_FolderItems_Count(obj.Count, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__vm_FolderItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    FolderListupPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel>;
                if (obj != null)
                {
                    bindings.Update__vm_FolderItems_Count(obj.Count, DATA_CHANGED);
                }
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> cache__vm_FolderItems = null;
                public void UpdateChildListeners__vm_FolderItems(global::System.Collections.ObjectModel.ObservableCollection<global::TsubameViewer.Presentation.ViewModels.PageNavigation.StorageItemViewModel> obj)
                {
                    if (obj != cache__vm_FolderItems)
                    {
                        if (cache__vm_FolderItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__vm_FolderItems).PropertyChanged -= PropertyChanged__vm_FolderItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__vm_FolderItems).CollectionChanged -= CollectionChanged__vm_FolderItems;
                            cache__vm_FolderItems = null;
                        }
                        if (obj != null)
                        {
                            cache__vm_FolderItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__vm_FolderItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__vm_FolderItems;
                        }
                    }
                }
                public void RegisterTwoWayListener_4(global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_4_SelectedItem();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Presentation.Views\FolderListupPage.xaml line 33
                {
                    this.SelectActionsContainer = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Presentation.Views\FolderListupPage.xaml line 72
                {
                    this.HeaderLayout = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 4: // Presentation.Views\FolderListupPage.xaml line 186
                {
                    this.FoldersAdaptiveGridView = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)this.FoldersAdaptiveGridView).SelectionChanged += this.OnSelectionChanged;
                }
                break;
            case 6: // Presentation.Views\FolderListupPage.xaml line 104
                {
                    this.FilesActionLayout = (global::Microsoft.Toolkit.Uwp.UI.Controls.DockPanel)(target);
                }
                break;
            case 7: // Presentation.Views\FolderListupPage.xaml line 105
                {
                    this.FileSortButton = (global::Windows.UI.Xaml.Controls.DropDownButton)(target);
                }
                break;
            case 8: // Presentation.Views\FolderListupPage.xaml line 145
                {
                    this.ChildFolderSortButtonHeaderText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 9: // Presentation.Views\FolderListupPage.xaml line 146
                {
                    this.ChildFolderSortButton = (global::Windows.UI.Xaml.Controls.DropDownButton)(target);
                }
                break;
            case 20: // Presentation.Views\FolderListupPage.xaml line 93
                {
                    this.ChangetoImageListupButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 21: // Presentation.Views\FolderListupPage.xaml line 82
                {
                    this.ReturnSourceFolderPageButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 25: // Presentation.Views\FolderListupPage.xaml line 45
                {
                    this.SelectAction_StorageItemRemoveButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 26: // Presentation.Views\FolderListupPage.xaml line 53
                {
                    this.SelectAction_OpenWithExplorerButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Presentation.Views\FolderListupPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    FolderListupPage_obj1_Bindings bindings = new FolderListupPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

