<Page
    x:Class="TsubameViewer.Presentation.Views.FolderListupPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ts="using:TsubameViewer.Presentation.Views.TemplateSelector" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
  xmlns:myBehaior="using:TsubameViewer.Presentation.Views.Behaviors" 
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:ss="using:TsubameViewer.Presentation.Views.StyleSelector" 
  xmlns:myConv="using:TsubameViewer.Presentation.Views.Converters"
  xmlns:models ="using:TsubameViewer.Models.Domain.FolderItemListing" 
  xmlns:winUI="using:Microsoft.UI.Xaml.Controls"
  xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
  xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
  xmlns:viewModels="using:TsubameViewer.Presentation.ViewModels.PageNavigation" 
  xmlns:uiNavigation="using:TsubameViewer.Presentation.Views.UINavigation"
  xmlns:uwpUIExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
  mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
  NavigationCacheMode="Enabled"
  >

  <!-- NavigaitonCacheMode = Enabled にすると
    ItemsRepeaterの中身が残る？ためキャッシュは利用していない
  -->
  
  <!-- ItemsRepeaterのメモリリークの修正
  https://github.com/microsoft/microsoft-ui-xaml/issues/1954
  -->

  <Page.Resources>

    <!--
    <Style TargetType="uwpControls:ImageEx">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="uwpControls:ImageEx">
            <Grid Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Image Name="PlaceholderImage"
                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               Opacity="1.0"
                               Source="{TemplateBinding PlaceholderSource}"
                               Stretch="{TemplateBinding PlaceholderStretch}" />
              <Image Name="Image"
                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               NineGrid="{TemplateBinding NineGrid}"
                               Opacity="0.0"
                               Stretch="{TemplateBinding Stretch}" />
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Failed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Image"
                                                                       Storyboard.TargetProperty="Opacity">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderImage"
                                                                       Storyboard.TargetProperty="Opacity">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Loading">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Image"
                                                                       Storyboard.TargetProperty="Opacity">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderImage"
                                                                       Storyboard.TargetProperty="Opacity">
                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Loaded">
                    <Storyboard>
                      <DoubleAnimation AutoReverse="False"
                                       Duration="0:0:0.00"
                                                         BeginTime="0"
                                                         Storyboard.TargetName="Image"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1" />
                      <DoubleAnimation AutoReverse="False"
                                                         BeginTime="0"
                                       Duration="0:0:0.00"
                                                         Storyboard.TargetName="PlaceholderImage"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unloaded" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    -->
    <!-- SmallImageWidth 等の定数はApp.xaml.csで設定している -->
    <!-- その定数自体は Models.Domain/FolderItemListing/ListingImageConstants.cs で定義している -->

    <Style TargetType="ProgressBar" >
      <Setter Property="Minimum" Value="0.0" />
      <Setter Property="Maximum" Value="1.0" />
      <Setter Property="Height" Value="4" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Foreground" Value="#afff3333" />
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <DataTemplate x:Key="FolderTemplate"
                  >
      <uwpControls:DockPanel>

        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" />
        </ToolTipService.ToolTip>

        <Grid Height="52" uwpControls:DockPanel.Dock="Bottom">
          <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" Margin="12 0 40 0" VerticalAlignment="Center" />
          <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xED41;" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20" Margin="0 4 16 0">
            <FontIcon.RenderTransform>
              <ScaleTransform ScaleX="1.40" ScaleY="1.40" CenterX="10" CenterY="10" />
            </FontIcon.RenderTransform>
          </FontIcon>

          <ProgressBar Value="{Binding ReadParcentage}" VerticalAlignment="Bottom" />
        </Grid>

        <Image Source="{Binding Image}"
                 Stretch="UniformToFill"
                 VerticalAlignment="Center"
                 Height="80"
                     />
      </uwpControls:DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="ArchiveFileTemplate">
      <uwpControls:DockPanel>
        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" />
        </ToolTipService.ToolTip>

        <Grid Height="52" uwpControls:DockPanel.Dock="Bottom">
          <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" Margin="12 0 40 0" VerticalAlignment="Center" />
          <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE736;" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20" Margin="0 4 16 0" UseLayoutRounding="True">
            <FontIcon.RenderTransform>
              <ScaleTransform ScaleX="1.40" ScaleY="1.40" CenterX="10" CenterY="10" />
            </FontIcon.RenderTransform>
          </FontIcon>
          
          <ProgressBar Value="{Binding ReadParcentage}" VerticalAlignment="Bottom" />
        </Grid>

        <Image Source="{Binding Image}"
                 Stretch="UniformToFill"
                 VerticalAlignment="Center"
                 Height="80"
                     />

      </uwpControls:DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="EBookFileTemplate">
      <uwpControls:DockPanel>
        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" />
        </ToolTipService.ToolTip>

        
        <Grid Height="52" uwpControls:DockPanel.Dock="Bottom">
          <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" Margin="12 0 40 0" VerticalAlignment="Center" />
          <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE82D;" VerticalAlignment="Center" HorizontalAlignment="Right" Width="20" Height="20" Margin="0 4 16 0" UseLayoutRounding="True">
            <FontIcon.RenderTransform>
              <ScaleTransform ScaleX="1.40" ScaleY="1.40" CenterX="10" CenterY="10" />
            </FontIcon.RenderTransform>
          </FontIcon>

          <ProgressBar Value="{Binding ReadParcentage}" VerticalAlignment="Bottom" />
        </Grid>

        <Image Source="{Binding Image}"
                 Stretch="UniformToFill"
                 VerticalAlignment="Center"
                 Height="80"
                     />

      </uwpControls:DockPanel>
    </DataTemplate>
    

    <ts:FolderItemTemplateSelector x:Key="FolderItemTemplateSelector" 
                                     Folder="{StaticResource FolderTemplate}"
                                   Archive="{StaticResource ArchiveFileTemplate}"
                                   EBook="{StaticResource EBookFileTemplate}"
                                     >
    </ts:FolderItemTemplateSelector>



    <Style x:Key="FolderStyle" TargetType="GridViewItem">
      <Setter Property="Background" Value="{ThemeResource SystemBaseLowColor}" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Stretch" />
      <Setter Property="Padding" Value="0 0 0 0" />
      <Setter Property="Margin" Value="6 6" />
    </Style>


    <CollectionViewSource x:Key="FolderAndArchiveItems"
                          Source="{Binding Groups}"
                          IsSourceGrouped="True"
                          ItemsPath="Items"
                          />

    <!-- Note: KeyboardNavigaiton(リモートやXboxOneなど）のために
               UserControlによるカーソル移動サポートを有効化している -->

    <DataTemplate x:Key="FileItemTemplate_Line">
      <UserControl IsTabStop="True" UseSystemFocusVisuals="True" Tag="{Binding Name}" Height="40" Width="240">
        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
        </ToolTipService.ToolTip>
        <Grid Background="{ThemeResource SystemBaseLowColor}" Padding="12 6">
          <StackPanel  VerticalAlignment="Center" HorizontalAlignment="Right" Margin="32 0 0 0" >
            <TextBlock Text="{Binding Name}" Width="1000" TextAlignment="End" HorizontalAlignment="Right" />
            <TextBlock Text="{Binding Path}" TextAlignment="End" Visibility="Collapsed" />
            
          </StackPanel>

          <SymbolIcon Symbol="OpenFile" HorizontalAlignment="Left" VerticalAlignment="Center" />
        </Grid>
      </UserControl>
    </DataTemplate>
    
    <DataTemplate x:Key="FileItemTemplate_Small">
      <UserControl IsTabStop="True" UseSystemFocusVisuals="True" Tag="{Binding Name}" Height="{StaticResource SmallImageHeight}" MinWidth="48" FocusVisualPrimaryBrush="{ThemeResource SystemAccentColor}">
        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
        </ToolTipService.ToolTip>
        <Image x:Name="Image" Source="{Binding Image, Mode=OneWay}" PointerEntered="Image_PointerEntered" PointerExited="Image_PointerExited" />
      </UserControl>
    </DataTemplate>

    <DataTemplate x:Key="FileItemTemplate_Midium">
      <UserControl IsTabStop="True" UseSystemFocusVisuals="True" Tag="{Binding Name}" Height="{StaticResource MidiumImageHeight}" MinWidth="80" FocusVisualPrimaryBrush="{ThemeResource SystemAccentColor}">
        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
        </ToolTipService.ToolTip>
        <Image x:Name="Image" Source="{Binding Image, Mode=OneWay}" PointerEntered="Image_PointerEntered" PointerExited="Image_PointerExited" />
      </UserControl>
    </DataTemplate>
    
    <DataTemplate x:Key="FileItemTemplate_Large">
      <UserControl IsTabStop="True" UseSystemFocusVisuals="True" Tag="{Binding Name}" Height="{StaticResource LargeImageHeight}" MinWidth="210" FocusVisualPrimaryBrush="{ThemeResource SystemAccentColor}" FocusVisualPrimaryThickness="3">
        <ToolTipService.ToolTip>
          <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
        </ToolTipService.ToolTip>
        <Image x:Name="Image" Source="{Binding Image, Mode=OneWay}" PointerEntered="Image_PointerEntered" PointerExited="Image_PointerExited" />
      </UserControl>
    </DataTemplate>


    <ts:FileDisplayModeTemplateSelector x:Key="FileDisplayModeTemplateSelector">
      <ts:FileDisplayModeTemplateSelector.Line>
        <DataTemplate >
          <Grid Height="13">
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="5" Width="13"
                    VerticalAlignment="Top"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="5" Width="13"
                  VerticalAlignment="Bottom"
                  />
          </Grid>
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Line>
      <ts:FileDisplayModeTemplateSelector.Small>
        <DataTemplate >
          <Grid>
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="13"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="5"
                    Canvas.Left="2"
                    
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="5" Width="13"
                    Canvas.Top="2"
                  />

          </Grid>
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Small>
      <ts:FileDisplayModeTemplateSelector.Midium>
        <DataTemplate >
          <Grid>
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="13"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="7" Width="7"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="7" Width="7"
                  HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                  />
          </Grid>
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Midium>
      <ts:FileDisplayModeTemplateSelector.Large>
        <DataTemplate >
          <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="13"
                  />
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Large>
    </ts:FileDisplayModeTemplateSelector>
    
  </Page.Resources>
  <Grid>
    <uwpControls:DockPanel>

      <StackPanel uwpControls:DockPanel.Dock="Top" x:Name="HeaderLayout" Margin="48 8 48 0"
                  Padding="8 0">
        <ListView x:Name="FileDisplayModeItemsListView"
          HorizontalAlignment="Right"
                  ItemsSource="{Binding FileDisplayModeItems}"
                  SelectedItem="{Binding FileDisplayMode.Value, Mode=TwoWay}"
                  ItemTemplateSelector="{StaticResource FileDisplayModeTemplateSelector}"
                  Visibility="Collapsed"
                  SelectionMode="Single"
                  SingleSelectionFollowsFocus="False"
                  XYFocusLeft="{x:Bind ReturnSourceFolderPageButton}"
                    >
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="MinWidth" Value="32" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ListView.ItemsPanel>
        </ListView>

        <TextBlock Text="{Binding DisplayCurrentPath}" Opacity="0.7" />
        <HyperlinkButton x:Name="ReturnSourceFolderPageButton"
                         Content="{Binding Source=ReturnSourceFolderPageButton, Converter={StaticResource LocalizeConverter}}" 
                         Command="{Binding OpenPageCommand}" CommandParameter="{Binding FoldersManagementPageName}"
                         XYFocusRight="{x:Bind FileDisplayModeItemsListView}"
                         >
          
        </HyperlinkButton>

        
      </StackPanel>
      <ScrollViewer>
        <StackPanel x:Name="ContentRootStackPanel" Margin="48 8 48 32">
          <uwpControls:AdaptiveGridView ItemsSource="{Binding Source={StaticResource FolderAndArchiveItems}}"
                          x:Name="FoldersAdaptiveGridView"
                          StretchContentForSingleRow="False"
                          OneRowModeEnabled="False"
                          VerticalAlignment="Top"
                          ItemTemplateSelector="{StaticResource FolderItemTemplateSelector}"
                          ItemContainerStyle="{StaticResource FolderStyle}"
                          DesiredWidth="360"            
                          ItemHeight="132"
                          IsItemClickEnabled="True"
                          ItemClickCommand="{Binding OpenFolderItemCommand}"
                          IsSynchronizedWithCurrentItem="False"
                                    SelectionMode="None"
                                    XYFocusDownNavigationStrategy="NavigationDirectionDistance"  
                                        IsTabStop="False"
                          >
            <GridView.ContextFlyout>
              <MenuFlyout x:Name="FolderAndArchiveMenuFlyout" Opened="MenuFlyout_Opened">
                <MenuFlyoutItem x:Name="OpenImageViewerItem" Text="{Binding Source=OpenImageViewer, Converter={StaticResource LocalizeConverter}}" Command="{Binding ElementName=ContentRootStackPanel, Path=DataContext.AltOpenFolderItemCommand}" />
                <MenuFlyoutItem x:Name="OpenListupItem" Text="{Binding Source=OpenFolderListup, Converter={StaticResource LocalizeConverter}}" Command="{Binding ElementName=ContentRootStackPanel, Path=DataContext.AltOpenFolderItemCommand}" />
              </MenuFlyout>
            </GridView.ContextFlyout>
            
            <GridView.ItemContainerTransitions>
              <TransitionCollection />
            </GridView.ItemContainerTransitions>
            <GridView.Header>
              <Grid >
              </Grid>
            </GridView.Header>
            <i:Interaction.Behaviors>
              <myBehaior:ListViewBaseFirstAppearTriggerBehavior>
                <core:CallMethodAction MethodName="Initialize" />
              </myBehaior:ListViewBaseFirstAppearTriggerBehavior>
            </i:Interaction.Behaviors>
          </uwpControls:AdaptiveGridView>

          <StackPanel x:Name="FilesActionLayout" Orientation="Horizontal" Margin="0 16" Visibility="Collapsed">
            <TextBlock VerticalAlignment="Center">
                <Run Text="{Binding Source=FileSortTitle, Converter={StaticResource LocalizeConverter}}" />:
            </TextBlock>
            <DropDownButton x:Name="FileSortButton" 
                            Content="{Binding SelectedFileSortType.Value, Converter={StaticResource LocalizeConverter}}"
                            Padding="8"
                            Background="Transparent"
                              Height="40"
                            >
              <DropDownButton.Flyout>
                <MenuFlyout>
                  <MenuFlyoutItem Text="{Binding Source=FileSortType.UpdateTimeDecending, Converter={StaticResource LocalizeConverter}}" Command="{Binding ChangeFileSortCommand}">
                    <MenuFlyoutItem.CommandParameter>
                      <models:FileSortType>UpdateTimeDecending</models:FileSortType>
                    </MenuFlyoutItem.CommandParameter>
                  </MenuFlyoutItem>
                  <MenuFlyoutItem Text="{Binding Source=FileSortType.UpdateTimeAscending, Converter={StaticResource LocalizeConverter}}" Command="{Binding ChangeFileSortCommand}">
                    <MenuFlyoutItem.CommandParameter>
                      <models:FileSortType>UpdateTimeAscending</models:FileSortType>
                    </MenuFlyoutItem.CommandParameter>
                  </MenuFlyoutItem>
                  <MenuFlyoutItem Text="{Binding Source=FileSortType.TitleAscending, Converter={StaticResource LocalizeConverter}}" Command="{Binding ChangeFileSortCommand}">
                    <MenuFlyoutItem.CommandParameter>
                      <models:FileSortType>TitleAscending</models:FileSortType>
                    </MenuFlyoutItem.CommandParameter>
                  </MenuFlyoutItem>
                  <MenuFlyoutItem Text="{Binding Source=FileSortType.TitleDecending, Converter={StaticResource LocalizeConverter}}" Command="{Binding ChangeFileSortCommand}">
                    <MenuFlyoutItem.CommandParameter>
                      <models:FileSortType>TitleDecending</models:FileSortType>
                    </MenuFlyoutItem.CommandParameter>
                  </MenuFlyoutItem>
                </MenuFlyout>
              </DropDownButton.Flyout>
            </DropDownButton>
          </StackPanel>

          <!-- Note: ItemTemplateの切り替えでは再表示が掛からないためItemsRepeater丸ごと表示切替で対応している -->
          <winUI:ItemsRepeater x:Name="FileItemsRepeater_Line"
                                  ItemsSource="{Binding FileItemsView}"
                                  ItemTemplate="{StaticResource FileItemTemplate_Line}"
                                 XYFocusUpNavigationStrategy="NavigationDirectionDistance"
                               Visibility="Collapsed"
                                  >
            <winUI:ItemsRepeater.Layout>
              <uwpControls:WrapLayout Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="6"
                                      />
            </winUI:ItemsRepeater.Layout>

            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="Tapped">
                <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" InputConverter="{StaticResource RoutedEventOriginalSourceConverter}" />
              </core:EventTriggerBehavior>
              <uiNavigation:UINavigationTriggerBehavior Kind="Accept" IsRequireFocus="True">
                <uiNavigation:BypassToCurrentFocusElementAction>
                  <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" />
                </uiNavigation:BypassToCurrentFocusElementAction>
              </uiNavigation:UINavigationTriggerBehavior>
            </i:Interaction.Behaviors>

          </winUI:ItemsRepeater>
          
          <winUI:ItemsRepeater x:Name="FileItemsRepeater_Small"
                                  ItemsSource="{Binding FileItemsView}"
                                  ItemTemplate="{StaticResource FileItemTemplate_Small}"
                                 XYFocusUpNavigationStrategy="NavigationDirectionDistance"
                               Visibility="Collapsed"
                                  >
            <winUI:ItemsRepeater.Layout>
              <uwpControls:WrapLayout Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="6"
                                      />
            </winUI:ItemsRepeater.Layout>

            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="Tapped">
                <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" InputConverter="{StaticResource RoutedEventOriginalSourceConverter}" />
              </core:EventTriggerBehavior>
              <uiNavigation:UINavigationTriggerBehavior Kind="Accept" IsRequireFocus="True">
                <uiNavigation:BypassToCurrentFocusElementAction>
                  <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" />
                </uiNavigation:BypassToCurrentFocusElementAction>
              </uiNavigation:UINavigationTriggerBehavior>
            </i:Interaction.Behaviors>

          </winUI:ItemsRepeater>

          <winUI:ItemsRepeater x:Name="FileItemsRepeater_Midium"
                                  ItemsSource="{Binding FileItemsView}"
                                  ItemTemplate="{StaticResource FileItemTemplate_Midium}"
                                 XYFocusUpNavigationStrategy="NavigationDirectionDistance"
                               Visibility="Collapsed"
                               FocusVisualSecondaryBrush="{ThemeResource SystemAccentColor}"
                                  >
            <winUI:ItemsRepeater.Layout>
              <uwpControls:WrapLayout Orientation="Horizontal" HorizontalSpacing="12" VerticalSpacing="12" />
            </winUI:ItemsRepeater.Layout>

            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="Tapped">
                <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" InputConverter="{StaticResource RoutedEventOriginalSourceConverter}" />
              </core:EventTriggerBehavior>
              <uiNavigation:UINavigationTriggerBehavior Kind="Accept" IsRequireFocus="True">
                <uiNavigation:BypassToCurrentFocusElementAction>
                  <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" />
                </uiNavigation:BypassToCurrentFocusElementAction>
              </uiNavigation:UINavigationTriggerBehavior>
            </i:Interaction.Behaviors>

          </winUI:ItemsRepeater>

          <winUI:ItemsRepeater x:Name="FileItemsRepeater_Large"
                                  ItemsSource="{Binding FileItemsView}"
                                  ItemTemplate="{StaticResource FileItemTemplate_Large}"
                                 XYFocusUpNavigationStrategy="NavigationDirectionDistance"
                               Visibility="Collapsed"
                               FocusVisualSecondaryBrush="{ThemeResource SystemAccentColor}"
                                  >
            <winUI:ItemsRepeater.Layout>
              <uwpControls:WrapLayout Orientation="Horizontal" HorizontalSpacing="12" VerticalSpacing="12" />
            </winUI:ItemsRepeater.Layout>

            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="Tapped">
                <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" InputConverter="{StaticResource RoutedEventOriginalSourceConverter}" />
              </core:EventTriggerBehavior>
              <uiNavigation:UINavigationTriggerBehavior Kind="Accept" IsRequireFocus="True">
                <uiNavigation:BypassToCurrentFocusElementAction>
                  <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" />
                </uiNavigation:BypassToCurrentFocusElementAction>
              </uiNavigation:UINavigationTriggerBehavior>
            </i:Interaction.Behaviors>

          </winUI:ItemsRepeater>

        </StackPanel>
      </ScrollViewer>
      
    </uwpControls:DockPanel>

    <VisualStateManager.VisualStateGroups>
      
      <!-- 表示内容切替中の全体の表示切替 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowProcessing}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentRootStackPanel.Opacity" Value="0.5" />
            <Setter Target="FileSortButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- フォルダアイテムが無い時のフォルダリストの非表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FolderItems.Count}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- ファイルアイテムが無い時のファイル並び変えを非表示切替 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasFileItem}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FilesActionLayout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- ファイルアイテムの表示方法切替
      　　１．画像ファイルのサムネイル表示を無効にしてる場合は強制で表示切替UIを非表示
      　　２．ファイルアイテムが無い時は非表示　
      -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding IsRestrictImageFileThumbnail}">
              <wst:EqualsStateTrigger.EqualTo>
                <x:Boolean>True</x:Boolean>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding HasFileItem}" />
            <!-- Note: ファイルの表示方法切替の時に 0になると一瞬表示が消えてしまう -->
            <!--<wst:EqualsStateTrigger Value="{Binding FileItems.Count}" EqualTo="0" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileDisplayModeItemsListView.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      
      <!-- ファイルの表示方法切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            
            <StateTrigger IsActive="{Binding IsRestrictImageFileThumbnail}" />
            
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Line</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileItemsRepeater_Line.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Small</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileItemsRepeater_Small.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Midium</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileItemsRepeater_Midium.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Large</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileItemsRepeater_Large.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>


      <!-- 画面サイズによる表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{StaticResource DebugTVMode}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Margin" Value="48 8 48 0" />
            <Setter Target="ContentRootStackPanel.Margin" Value="48 8 48 27" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="1220" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Margin" Value="140 16" />
            <Setter Target="ContentRootStackPanel.Margin" Value="140 8 140 32" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="610" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Margin" Value="8 16" />
            <Setter Target="ContentRootStackPanel.Margin" Value="8 8 8 32" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
      
  </Grid>
</Page>
