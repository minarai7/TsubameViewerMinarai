<Page
    x:Class="TsubameViewer.Presentation.Views.FolderListupPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ts="using:TsubameViewer.Presentation.Views.TemplateSelector" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
  xmlns:myBehaior="using:TsubameViewer.Presentation.Views.Behaviors" 
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:ss="using:TsubameViewer.Presentation.Views.StyleSelector" 
  xmlns:myConv="using:TsubameViewer.Presentation.Views.Converters"
  xmlns:models ="using:TsubameViewer.Models.Domain.FolderItemListing" 
  xmlns:winUI="using:Microsoft.UI.Xaml.Controls"
  xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
  xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:viewModels="using:TsubameViewer.Presentation.ViewModels.PageNavigation"
  mc:Ignorable="d"
  NavigationCacheMode="Enabled"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

  <Page.Resources>

    <!-- SmallImageWidth 等の定数はApp.xaml.csで設定している -->
    <!-- その定数自体は Models.Domain/FolderItemListing/ListingImageConstants.cs で定義している -->


    <DataTemplate x:Key="DummyTemplate">
      <Border Height="20" Width="20" />
    </DataTemplate>

    <DataTemplate x:Key="LineFileItemTemplate">
      <StackPanel Orientation="Horizontal" Width="240">
        <StackPanel>
          <TextBlock Text="{Binding Name}" />
          <TextBlock Text="{Binding Path}" FontSize="12" Opacity="0.6" />
        </StackPanel>
      </StackPanel>
    </DataTemplate >

    <DataTemplate x:Key="SmallThumbnailFileItemTemplate">
      <Image Source="{Binding Image, Mode=OneWay}" Height="{StaticResource SmallImageHeight}" MinWidth="32" />
    </DataTemplate>

    <DataTemplate x:Key="MidiumThumbnailFileItemTemplate">
      <Image Source="{Binding Image, Mode=OneWay}" Height="{StaticResource MidiumImageHeight}" MinWidth="32" />
    </DataTemplate>

    <DataTemplate x:Key="LargeThumbnailFileItemTemplate">
      <Image Source="{Binding Image, Mode=OneWay}" Height="{StaticResource LargeImageHeight}" MinWidth="32" />
    </DataTemplate>



    
    

    <ts:FileDisplayModeTemplateSelector x:Key="FileDisplayModeTemplateSelector">
      <ts:FileDisplayModeTemplateSelector.Line>
        <DataTemplate >
          <StackPanel Spacing="2">
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="5" Width="13"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="5" Width="13"
                  />
          </StackPanel>
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Line>
      <ts:FileDisplayModeTemplateSelector.Small>
        <DataTemplate >
          <Grid>
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="13"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="5"
                    Canvas.Left="2"
                    
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="5" Width="13"
                    Canvas.Top="2"
                  />

          </Grid>
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Small>
      <ts:FileDisplayModeTemplateSelector.Midium>
        <DataTemplate >
          <Grid>
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="13"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="7" Width="7"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                  />
            <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="7" Width="7"
                  HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                  />
          </Grid>
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Midium>
      <ts:FileDisplayModeTemplateSelector.Large>
        <DataTemplate >
          <Border BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}" BorderThickness="1" 
                  Height="13" Width="13"
                  />
        </DataTemplate>
      </ts:FileDisplayModeTemplateSelector.Large>
    </ts:FileDisplayModeTemplateSelector>

  </Page.Resources>
  <Grid>
    <uwpControls:DockPanel>

      <StackPanel uwpControls:DockPanel.Dock="Top" x:Name="HeaderLayout" Margin="48 8">
        <ListView HorizontalAlignment="Right"
                  ItemsSource="{Binding FileDisplayModeItems}"
                  SelectedItem="{Binding FileDisplayMode.Value, Mode=TwoWay}"
                  ItemTemplateSelector="{StaticResource FileDisplayModeTemplateSelector}"
                  Visibility="Visible"
                  SelectionMode="Single"
                  SingleSelectionFollowsFocus="False"
                    >
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="MinWidth" Value="32" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ListView.ItemsPanel>
        </ListView>

        <TextBlock Text="{Binding DisplayCurrentPath}" Opacity="0.7" />
        <HyperlinkButton Content="元のフォルダへ戻る" Command="{Binding OpenPageCommand}" CommandParameter="{Binding FoldersManagementPageName}">
          
        </HyperlinkButton>

        
      </StackPanel>

      <uwpControls:AdaptiveGridView ItemsSource="{Binding FolderItems}"
                          x:Name="FoldersAdaptiveGridView"
                          StretchContentForSingleRow="False"
                          OneRowModeEnabled="False"
                          VerticalAlignment="Top"
                          ItemTemplateSelector="{StaticResource FolderItemTemplateSelector}"  
                          ItemContainerStyleSelector="{StaticResource FolderItemStyleSelector}"
                          DesiredWidth="360"            
                          ItemHeight="132"
                          IsItemClickEnabled="True"
                          ItemClickCommand="{Binding OpenFolderItemCommand}"
                          IsSynchronizedWithCurrentItem="False"
                                    Padding="48 8 48 32"
                          >
        <GridView.Header>
          <Grid >
          </Grid>
        </GridView.Header>
        <i:Interaction.Behaviors>
          <myBehaior:ListViewBaseFirstAppearTriggerBehavior>
            <core:CallMethodAction MethodName="Initialize" />
          </myBehaior:ListViewBaseFirstAppearTriggerBehavior>
        </i:Interaction.Behaviors>

        <GridView.Footer>
          
          <StackPanel Margin="0 8 0 0">
            
            <winUI:ItemsRepeater x:Name="FileItemsRepeater"
                                  ItemsSource="{Binding FileItems}"
                                  ElementPrepared="OnElementPrepared"
                                  ElementIndexChanged="OnElementIndexChanged"
                                  ElementClearing="OnElementClearing"
                                  ItemTemplate="{StaticResource LineFileItemTemplate}"
                                  >
              <winUI:ItemsRepeater.Layout>
                <uwpControls:WrapLayout x:Name="FileItemsRepeaterWrapLayout" Orientation="Horizontal" 
                                        HorizontalSpacing="12" VerticalSpacing="12"                                        
                                        />
              </winUI:ItemsRepeater.Layout>

              <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="DoubleTapped">
                  <core:InvokeCommandAction Command="{Binding OpenFolderItemCommand}" InputConverter="{StaticResource RoutedEventOriginalSourceConverter}" />
                </core:EventTriggerBehavior>
              </i:Interaction.Behaviors>
              
            </winUI:ItemsRepeater>
            
          </StackPanel>
        </GridView.Footer>
      </uwpControls:AdaptiveGridView>
    </uwpControls:DockPanel>

    <VisualStateManager.VisualStateGroups>
      
      <!-- フォルダアイテムが無い時のフォルダリストの非表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FolderItems.Count}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- 画面サイズによる表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="1220" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Margin" Value="140 16" />
            <Setter Target="FoldersAdaptiveGridView.Padding" Value="140 8 140 32" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="610" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Margin" Value="16 16" />
            <Setter Target="FoldersAdaptiveGridView.Padding" Value="8 8 8 32" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- ファイルの表示方法切り替え -->

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Small</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileItemsRepeater.ItemTemplate" Value="{StaticResource SmallThumbnailFileItemTemplate}" />
            <Setter Target="FileItemsRepeaterWrapLayout.HorizontalSpacing" Value="6" />
            <Setter Target="FileItemsRepeaterWrapLayout.VerticalSpacing" Value="6" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Midium</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            
            <Setter Target="FileItemsRepeater.ItemTemplate" Value="{StaticResource MidiumThumbnailFileItemTemplate}" />
            <Setter Target="FileItemsRepeaterWrapLayout.HorizontalSpacing" Value="12" />
            <Setter Target="FileItemsRepeaterWrapLayout.VerticalSpacing" Value="12" />
            
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}">
              <wst:EqualsStateTrigger.EqualTo>
                <models:FileDisplayMode>Large</models:FileDisplayMode>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileItemsRepeater.ItemTemplate" Value="{StaticResource LargeThumbnailFileItemTemplate}" />
            <Setter Target="FileItemsRepeaterWrapLayout.HorizontalSpacing" Value="12" />
            <Setter Target="FileItemsRepeaterWrapLayout.VerticalSpacing" Value="12" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
    </VisualStateManager.VisualStateGroups>
      
  </Grid>
</Page>
