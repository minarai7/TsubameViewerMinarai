<Page
    x:Class="TsubameViewer.Presentation.Views.FolderListupPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ts="using:TsubameViewer.Presentation.Views.TemplateSelector" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
  xmlns:myBehaior="using:TsubameViewer.Presentation.Views.Behaviors" 
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:ss="using:TsubameViewer.Presentation.Views.StyleSelector" 
  xmlns:myConv="using:TsubameViewer.Presentation.Views.Converters"
  xmlns:models ="using:TsubameViewer.Models.Domain.FolderItemListing"
  mc:Ignorable="d"
  NavigationCacheMode="Enabled"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

  <Page.Resources>

    <x:Double x:Key="SmallImageWidth">96</x:Double>
    <x:Double x:Key="SmallImageHeight">96</x:Double>

    <x:Double x:Key="MidiumImageWidth">180</x:Double>
    <x:Double x:Key="MidiumImageHeight">180</x:Double>

    <x:Double x:Key="LargeImageWidth">300</x:Double>
    <x:Double x:Key="LargeImageHeight">426</x:Double>
    
    
    <myConv:LoadAttachmentAsyncConverter x:Key="LoadAttachmentAsyncConverter" />

    <ts:ValueDataTemplateSelector x:Key="FileItemTemplateSelector"  PropertyName="Type">
      <ts:ValueDataTemplate Value="Image">
        <DataTemplate>
          <uwpControls:DockPanel>
            <Border uwpControls:DockPanel.Dock="Left" Margin="0 0 12 0">
              <SymbolIcon Symbol="Pictures" />
            </Border>
            <Border uwpControls:DockPanel.Dock="Bottom">
              <TextBlock Text="{Binding Path}" FontSize="12" Opacity="0.6" />
            </Border>
            <TextBlock Text="{Binding Name}" />
          </uwpControls:DockPanel>
          
        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Archive">
        <DataTemplate>
          <uwpControls:DockPanel>
            <Border uwpControls:DockPanel.Dock="Left" Margin="0 0 12 0">
              <SymbolIcon Symbol="Library" />
            </Border>
            <Border uwpControls:DockPanel.Dock="Bottom">
              <TextBlock Text="{Binding Path}" FontSize="12" Opacity="0.7" />
            </Border>
            <TextBlock Text="{Binding Name}" />
          </uwpControls:DockPanel>
        </DataTemplate>
      </ts:ValueDataTemplate>
    </ts:ValueDataTemplateSelector>

    <ts:ValueDataTemplateSelector x:Key="SmallThumbnailFileItemTemplateSelector"  PropertyName="Type">
      <ts:ValueDataTemplate Value="Image">
        <DataTemplate>
          <uwpControls:DockPanel>
            <Image Source="{Binding Result}" DataContext="{Binding Converter={StaticResource LoadAttachmentAsyncConverter}}" Width="{StaticResource SmallImageWidth}" Height="{StaticResource SmallImageHeight}" />
          </uwpControls:DockPanel>

        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Archive">
        <DataTemplate>
          <uwpControls:DockPanel>
            <TextBlock Text="{Binding Name}" uwpControls:DockPanel.Dock="Bottom" />
            <Image Source="{Binding Result}" DataContext="{Binding Converter={StaticResource LoadAttachmentAsyncConverter}}" Width="{StaticResource SmallImageWidth}" Height="{StaticResource SmallImageHeight}" />
          </uwpControls:DockPanel>
        </DataTemplate>
      </ts:ValueDataTemplate>
    </ts:ValueDataTemplateSelector>

    <ts:ValueDataTemplateSelector x:Key="MidiumThumbnailFileItemTemplateSelector"  PropertyName="Type">
      <ts:ValueDataTemplate Value="Image">
        <DataTemplate>
          <uwpControls:DockPanel>
            <Image Source="{Binding Result}" DataContext="{Binding Converter={StaticResource LoadAttachmentAsyncConverter}}" Width="{StaticResource MidiumImageWidth}" Height="{StaticResource MidiumImageHeight}" />
          </uwpControls:DockPanel>

        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Archive">
        <DataTemplate>
          <uwpControls:DockPanel>
            <TextBlock Text="{Binding Name}" uwpControls:DockPanel.Dock="Bottom" />
            <Image Source="{Binding Result}" DataContext="{Binding Converter={StaticResource LoadAttachmentAsyncConverter}}" Width="{StaticResource MidiumImageWidth}" Height="{StaticResource MidiumImageHeight}" />
          </uwpControls:DockPanel>
        </DataTemplate>
      </ts:ValueDataTemplate>
    </ts:ValueDataTemplateSelector>

    <ts:ValueDataTemplateSelector x:Key="LargeThumbnailFileItemTemplateSelector"  PropertyName="Type">
      <ts:ValueDataTemplate Value="Image">
        <DataTemplate>
          <uwpControls:DockPanel>
            <Image Source="{Binding Result}" DataContext="{Binding Converter={StaticResource LoadAttachmentAsyncConverter}}" Width="{StaticResource LargeImageWidth}" Height="{StaticResource LargeImageHeight}" />
          </uwpControls:DockPanel>

        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Archive">
        <DataTemplate>
          <uwpControls:DockPanel>
            <TextBlock Text="{Binding Name}" uwpControls:DockPanel.Dock="Bottom" />
            <Image Source="{Binding Result}" DataContext="{Binding Converter={StaticResource LoadAttachmentAsyncConverter}}" Width="{StaticResource LargeImageWidth}" Height="{StaticResource LargeImageHeight}" />
          </uwpControls:DockPanel>
        </DataTemplate>
      </ts:ValueDataTemplate>
    </ts:ValueDataTemplateSelector>

    <ss:ValueBasedStyleSelector x:Key="FolderStyleTemplateSelector" PropertyName="Type">
      <Style TargetType="ListViewItem" ss:ValueBasedStyleSelectorExtension.Value="Image">
        
      </Style>
      <Style TargetType="ListViewItem" ss:ValueBasedStyleSelectorExtension.Value="Archive">

      </Style>
    </ss:ValueBasedStyleSelector>


    <ts:ValueDataTemplateSelector x:Key="FileDisplayModeTemplateSelector">
      <ts:ValueDataTemplate Value="Line">
        <DataTemplate >
          <Canvas Height="16" Width="16">
            <Line X1="0" X2="16" Y1="7"  Y2="7" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
          </Canvas>
        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Small">
        <DataTemplate >
          <Canvas Height="16" Width="16">
            <Line X1="0"  X2="16" Y1="0"  Y2="0"  Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="0"  X2="16" Y1="16" Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="0"  X2="0"  Y1="0"  Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="16" X2="16" Y1="0"  Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
          </Canvas>
        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Midium">
        <DataTemplate >
          <Canvas Height="16" Width="16">
            <Line X1="0"  X2="16" Y1="0"  Y2="0"  Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="0"  X2="16" Y1="16" Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="0"  X2="0"  Y1="0"  Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="16" X2="16" Y1="0"  Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
          </Canvas>
        </DataTemplate>
      </ts:ValueDataTemplate>
      <ts:ValueDataTemplate Value="Large">
        <DataTemplate >
          <Canvas Height="16" Width="16">
            <Line X1="0"  X2="16" Y1="0"  Y2="0"  Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="0"  X2="16" Y1="16" Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="0"  X2="0"  Y1="0"  Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Line X1="16" X2="16" Y1="0"  Y2="16" Stroke="{ThemeResource ApplicationForegroundThemeBrush}" />
          </Canvas>
        </DataTemplate>
      </ts:ValueDataTemplate>
    </ts:ValueDataTemplateSelector>

  </Page.Resources>
  <Grid>
    <uwpControls:DockPanel>

      <StackPanel uwpControls:DockPanel.Dock="Top" x:Name="HeaderLayout" Margin="48 8">
        <ListView HorizontalAlignment="Right"
                   ItemsSource="{Binding FileDisplayModeItems}"
                    SelectedItem="{Binding FileDisplayMode.Value, Mode=TwoWay}"
                    ItemTemplateSelector="{StaticResource FileDisplayModeTemplateSelector}"
                  Visibility="Visible"
                  SelectionMode="Single"
                  SingleSelectionFollowsFocus="False"
                    >
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="MinWidth" Value="32" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ListView.ItemsPanel>
        </ListView>

        <TextBlock Text="{Binding DisplayCurrentPath}" Opacity="0.7" />
        <HyperlinkButton Content="元のフォルダへ戻る" Command="{Binding OpenPageCommand}" CommandParameter="{Binding FoldersManagementPageName}">
          
        </HyperlinkButton>

        
      </StackPanel>

      <ScrollViewer>
        <StackPanel>
          <uwpControls:AdaptiveGridView 
              x:Name="FoldersAdaptiveGridView"
              StretchContentForSingleRow="False"
              OneRowModeEnabled="False"
              ItemsSource="{Binding FolderItems}" 
              ItemTemplateSelector="{StaticResource FolderItemTemplateSelector}"    
              ItemContainerStyleSelector="{StaticResource FolderItemStyleSelector}"
              DesiredWidth="360"            
              ItemHeight="132"
              IsItemClickEnabled="True"
              ItemClickCommand="{Binding OpenFolderItemCommand}"
              IsSynchronizedWithCurrentItem="False"
              Padding="48 8"
              >
            <GridView.Header>
              <Grid >
              </Grid>

            </GridView.Header>
            <i:Interaction.Behaviors>
            </i:Interaction.Behaviors>
          </uwpControls:AdaptiveGridView>

          <!-- Files -->
          <uwpControls:AdaptiveGridView 
            x:Name="FilesListView"
            ItemsSource="{Binding FileItems}"
            ItemTemplateSelector="{StaticResource FileItemTemplateSelector}"
            Padding="48 8"
            IsItemClickEnabled="True"
            DesiredWidth="320"            
            ItemHeight="40"
            ItemClickCommand="{Binding OpenFolderItemCommand}"
            >
            
            <GridView.Header>
              <Grid>
                <!-- TODO: 並べ替え -->
              </Grid>
            </GridView.Header>
          </uwpControls:AdaptiveGridView>

        </StackPanel>


      </ScrollViewer>
    </uwpControls:DockPanel>
    
    

    <VisualStateManager.VisualStateGroups>
      
      <!-- フォルダアイテムが無い時のフォルダリストの非表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FolderItems.Count}" EqualTo="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FoldersAdaptiveGridView.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- 画面サイズによる表示切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="610" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Margin" Value="16 16" />
            <Setter Target="FoldersAdaptiveGridView.Padding" Value="8 16" />
            <Setter Target="FilesListView.Padding" Value="8 16" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- ファイルの表示方法切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}" EqualTo="Small" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FilesListView.ItemTemplateSelector" Value="{StaticResource SmallThumbnailFileItemTemplateSelector}" />
            <Setter Target="FilesListView.DesiredWidth" Value="{StaticResource SmallImageWidth}" />
            <Setter Target="FilesListView.ItemHeight" Value="{StaticResource SmallImageHeight}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}" EqualTo="Midium" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FilesListView.ItemTemplateSelector" Value="{StaticResource MidiumThumbnailFileItemTemplateSelector}" />
            <Setter Target="FilesListView.DesiredWidth" Value="{StaticResource MidiumImageWidth}" />
            <Setter Target="FilesListView.ItemHeight" Value="{StaticResource MidiumImageHeight}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:EqualsStateTrigger Value="{Binding FileDisplayMode.Value}" EqualTo="Large" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FilesListView.ItemTemplateSelector" Value="{StaticResource LargeThumbnailFileItemTemplateSelector}" />
            <Setter Target="FilesListView.DesiredWidth" Value="{StaticResource LargeImageWidth}" />
            <Setter Target="FilesListView.ItemHeight" Value="{StaticResource LargeImageHeight}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
