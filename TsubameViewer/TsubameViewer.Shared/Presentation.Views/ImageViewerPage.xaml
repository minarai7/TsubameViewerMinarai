<Page
    x:Class="TsubameViewer.Presentation.Views.ImageViewerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:myConv="using:TsubameViewer.Presentation.Views.Converters"
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
  xmlns:myBehaviour="using:TsubameViewer.Presentation.Views.Behaviors"
  xmlns:uwpUIExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions" 
  xmlns:uiNavigation="using:TsubameViewer.Presentation.Views.UINavigation"
  xmlns:domainModels="using:TsubameViewer.Models.Domain" 
  xmlns:myStateTriggers="using:TsubameViewer.Presentation.Views.StateTrigger"
  mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
  >
  
  <Page.Resources>

    <myConv:SliderValueChangedEventArgsConverter x:Key="SliderValueChangedEventArgsConverter" />

    <Flyout x:Key="SettingsFlyout">
      <StackPanel Spacing="16">
        <ToggleSwitch IsOn="{Binding ImageViewerSettings.IsReverseImageFliping_MouseWheel, Mode=TwoWay}"
                    Header="{Binding Source=IsReverseImageFliping_MouseWheel, Converter={StaticResource LocalizeConverter}}"
                    />
        <ToggleSwitch IsOn="{Binding ImageViewerSettings.IsReverseImageFliping_Button, Mode=TwoWay}"
                    Header="{Binding Source=IsReverseImageFliping_Button, Converter={StaticResource LocalizeConverter}}"
                    />
        <ToggleSwitch IsOn="{Binding ImageViewerSettings.IsEnableSpreadDisplay, Mode=TwoWay}"
                    Header="{Binding Source=IsEnableSpreadDisplay, Converter={StaticResource LocalizeConverter}}"
                    />
        <ToggleSwitch IsOn="{Binding ImageViewerSettings.IsLeftBindingView, Mode=TwoWay}"
                    Header="{Binding Source=IsLeftBindingView, Converter={StaticResource LocalizeConverter}}"
                    />

      </StackPanel>
    </Flyout>

    <Flyout x:Key="PageFlyout">

      <StackPanel>

        <ComboBox x:Name="PageFolderNamesSelector"
                          ItemsSource="{Binding PageFolderNames}"
                            SelectedItem="{Binding PageFolderName, Mode=TwoWay}"
                          SelectionChangedTrigger="Committed"
                            Header="{Binding Source=CurrentFolder_InArchive, Converter={StaticResource LocalizeConverter}}"
                            MinWidth="240"
                            Visibility="Collapsed"
                  Margin="0 0 0 16"
                          >
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="SelectionChanged">
              <core:InvokeCommandAction Command="{Binding ChangePageFolderCommand}" CommandParameter="{x:Bind PageFolderNamesSelector.SelectedValue, Mode=OneWay}" />
              <core:CallMethodAction TargetObject="{Binding ElementName=PageFlyout}" MethodName="Hide" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>

        </ComboBox>

        <Slider x:Name="PageSelector"
                          Value="{Binding CurrentImageIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Width="240"
                          Minimum="0"
                          Maximum="{Binding Images.Length, Converter={StaticResource NumberMinus1Converter}}"
                          ThumbToolTipValueConverter="{StaticResource NumberStartFrom1Converter}"
                          TickFrequency="1"
                          StepFrequency="1"
                          Header="{Binding Source=Page, Converter={StaticResource LocalizeConverter}}"
                Margin="4 0"
                FlowDirection="RightToLeft"
                          >
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ValueChanged">
              <core:InvokeCommandAction Command="{Binding ChangePageCommand}" InputConverter="{StaticResource SliderValueChangedEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Slider>

        <Button x:Name="DoubleViewCorrectButton" Content="見開きのページズレを補正する" Command="{Binding DoubleViewCorrectCommand}" Visibility="Collapsed"
                Margin="0 16 0 0"
                />

      </StackPanel>
    </Flyout>


    <MenuFlyout x:Key="DesktopViewManagementFlyout">
      <MenuFlyoutItem Text="{Binding Source=SwitchFullScreen, Converter={StaticResource LocalizeConverter}}" Command="{Binding ToggleFullScreenCommand}"
                      x:Name="SwitchFullScreeMenuItem"
                      Visibility="Collapsed"
                      >
        <MenuFlyoutItem.KeyboardAccelerators>
          <KeyboardAccelerator Key="F11" IsEnabled="False" />
        </MenuFlyoutItem.KeyboardAccelerators>
      </MenuFlyoutItem>
    </MenuFlyout>


  </Page.Resources>

  <!-- Note: IsHitTestVisible="True" Background="Transparent" が無いと
             マウススクロールが反応しない問題が発生する 
  -->
  <Grid x:Name="RootGrid" uwpUIExtensions:FrameworkElementExtensions.EnableActualSizeBinding="True"
        IsHitTestVisible="True" Background="Transparent"
        ContextFlyout="{StaticResource DesktopViewManagementFlyout}"
        >
    
    

    <i:Interaction.Behaviors>
      
      <!-- Mouse Input-->
      <myBehaviour:MouseWheelTrigger x:Name="DefaultMouseWheelTrigger">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{Binding GoPrevImageCommand, Mode=OneTime}" />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{Binding GoNextImageCommand, Mode=OneTime}" />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>
      <myBehaviour:MouseWheelTrigger x:Name="ReverseMouseWheelTrigger" IsEnabled="False">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{Binding GoNextImageCommand, Mode=OneTime}" />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{Binding GoPrevImageCommand, Mode=OneTime}" />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>
      <myBehaviour:MouseCenterClickTrigger>
        <core:InvokeCommandAction Command="{Binding ToggleFullScreenCommand}" />
      </myBehaviour:MouseCenterClickTrigger>
      
      <!-- GamePad Input-->
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadLeftTriggerBehavior" Kind="Left" IsRequireFocus="True">
        <core:InvokeCommandAction Command="{Binding GoNextImageCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightTriggerBehavior" Kind="Right" IsRequireFocus="True">
        <core:InvokeCommandAction Command="{Binding GoPrevImageCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="ReverseGamePadLeftTriggerBehavior" Kind="Left" IsRequireFocus="True" IsEnabled="False">
        <core:InvokeCommandAction Command="{Binding GoPrevImageCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="ReverseGamePadRightTriggerBehavior" Kind="Right" IsRequireFocus="True" IsEnabled="False">
        <core:InvokeCommandAction Command="{Binding GoNextImageCommand, Mode=OneTime}" />
      </uiNavigation:UINavigationTriggerBehavior>


      <uiNavigation:UINavigationTriggerBehavior Kind="Menu">
        <core:InvokeCommandAction x:Name="GamePadBottomUIToggleAction" Command="{x:Bind ToggleBottomMenuCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>

      <!-- Image sizing -->
      <core:EventTriggerBehavior EventName="Loaded">
        <core:ChangePropertyAction TargetObject="{Binding CanvasWidth}" PropertyName="Value" Value="{Binding ElementName=RootGrid, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualWidth)}" />
        <core:ChangePropertyAction TargetObject="{Binding CanvasHeight}" PropertyName="Value" Value="{Binding ElementName=RootGrid, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualHeight)}" />
      </core:EventTriggerBehavior>
      <core:EventTriggerBehavior EventName="SizeChanged">
        <core:ChangePropertyAction TargetObject="{Binding CanvasWidth}" PropertyName="Value" Value="{Binding ElementName=RootGrid, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualWidth)}" />
        <core:ChangePropertyAction TargetObject="{Binding CanvasHeight}" PropertyName="Value" Value="{Binding ElementName=RootGrid, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualHeight)}" />
        <core:InvokeCommandAction Command="{Binding SizeChangedCommand}" />
      </core:EventTriggerBehavior>


    </i:Interaction.Behaviors>

    <!-- ContextFlyout のMenuFlyoutItem.KeyboardAccelerators はFlyoutが表示されてからでないと反応しない
         そのため、非表示のButtonのKeyboardAcceleratorsを利用する
    -->
    <Button Command="{Binding ToggleFullScreenCommand}" Width="0" Height="0" MinHeight="0" MinWidth="0" Opacity="0.0" IsTabStop="False">
      <Button.KeyboardAccelerators>
        <KeyboardAccelerator Key="F11" />
      </Button.KeyboardAccelerators>
    </Button>

    <Border x:Name="ImagesContainer"
            uwpUIExtensions:FrameworkElementExtensions.EnableActualSizeBinding="True"
            >
      <Border.RenderTransform>
        <TranslateTransform />
      </Border.RenderTransform>
      <ItemsControl ItemsSource="{Binding CurrentImages}"
                    HorizontalAlignment="Center"
                    x:Name="ImageItemsControl"
                    >
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Image Source="{Binding}" Stretch="Uniform" MaxWidth="{Binding ElementName=ImagesContainer, Path=(uwpUIExtensions:FrameworkElementExtensions.ActualWidth)}"  />
          </DataTemplate>
        </ItemsControl.ItemTemplate>

        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel x:Name="ImageContainerPanel" 
                        Orientation="Horizontal" 
                        FlowDirection="RightToLeft"
                >
            </StackPanel>

          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </Border>
    


    
    <!-- コントロールUI（共通）-->
    <Grid x:Name="UIContainer" Margin="0 48 0 32">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="3*" />
        <ColumnDefinition Width="4*" />
        <ColumnDefinition Width="3*" />
      </Grid.ColumnDefinitions>
      <Button x:Name="LeftPageMoveButton"
        Command="{Binding GoNextImageCommand, Mode=OneTime}"
              Grid.Column="0"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Left" />
          <KeyboardAccelerator Key="LeftButton" />
        </Button.KeyboardAccelerators>

        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
          <SymbolIcon Symbol="Back" />
        </Border>

      </Button>

      <Button x:Name="ReverseLeftPageMoveButton"
        Command="{Binding GoPrevImageCommand, Mode=OneTime}"
              Grid.Column="0"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              IsEnabled="False"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Left" />
          <KeyboardAccelerator Key="LeftButton" />
        </Button.KeyboardAccelerators>

        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
          <SymbolIcon Symbol="Back" />
        </Border>

      </Button>


      <Button x:Name="ToggleBottomMenuButton"
              Command="{x:Bind ToggleBottomMenuCommand}" 
              Grid.Column="1"
              Grid.ColumnSpan="1"
              Opacity="0" 
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden" />



      <Button x:Name="RightPageMoveButton"
        Command="{Binding GoPrevImageCommand, Mode=OneTime}"
              Grid.Column="2"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Right" />
          <KeyboardAccelerator Key="RightButton" />

        </Button.KeyboardAccelerators>

        <SymbolIcon Symbol="Forward" />
      </Button>

      <Button x:Name="ReverseRightPageMoveButton"
        Command="{Binding GoNextImageCommand, Mode=OneTime}"
              Grid.Column="2"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              IsEnabled="False"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Right" />
          <KeyboardAccelerator Key="RightButton" />

        </Button.KeyboardAccelerators>

        <SymbolIcon Symbol="Forward" />
      </Button>
    </Grid>


    

    

    
    <!-- 補助コントロールUI（コントローラーとタッチ操作） -->
    <Grid x:Name="SwipeProcessScreen" Background="Transparent" IsHitTestVisible="True" Visibility="Collapsed">
      <Grid x:Name="AnimationUIContainer" Background="{ThemeResource SystemAltMediumLowColor}" Opacity="0"          
          >
       
      </Grid>

      <uwpControls:DockPanel x:Name="AnimationUICommandBar" VerticalAlignment="Bottom" Padding="32" Background="{ThemeResource SystemChromeAltHighColor}" IsHitTestVisible="True">
        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Left" >
          <Button x:Name="BottomUIBackNavigationButton" Command="{Binding BackNavigationCommand}" Height="48" Width="60"
                  XYFocusRight="{x:Bind ImageNavigationFlyoutButton}"
                  >
            <SymbolIcon Symbol="Back">
              <SymbolIcon.RenderTransform>
                <ScaleTransform ScaleX="0.6" ScaleY="0.6" CenterX="10" CenterY="10" />
              </SymbolIcon.RenderTransform>
            </SymbolIcon>
          </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Right" Spacing="16">
          <Button x:Name="ImageNavigationFlyoutButton" Flyout="{StaticResource PageFlyout}" Height="48" Background="Transparent" 
                  XYFocusLeft="{x:Bind BottomUIBackNavigationButton}"
                  XYFocusRight="{x:Bind BottomUISettingsFlyoutButton}"
                  >
            <TextBlock uwpControls:DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="16" Margin="8 0 0 0" TextDecorations="Underline">
                    <Run Text="{Binding PageFolderName}" /> - <Run Text="{Binding PageName}" /> - <Run Text="{Binding DisplayCurrentImageIndex.Value}" />/<Run Text="{Binding Images.Length}" />
            </TextBlock>

          </Button>
          <Button x:Name="BottomUISettingsFlyoutButton" Flyout="{StaticResource SettingsFlyout}" Height="48" Width="60"
                  XYFocusLeft="{x:Bind ImageNavigationFlyoutButton}"
                  >
            <SymbolIcon Symbol="Setting" />
          </Button>

        </StackPanel>


        <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="16" Margin="16 0" >
              <Run Text="{Binding Title}" />
        </TextBlock>

      </uwpControls:DockPanel>
    </Grid>

    <!-- 補助コントロールUI（デスクトップ） -->
    <Grid Height="32" x:Name="Toolbar_Desktop" VerticalAlignment="Top" Opacity="0.75" Background="{ThemeResource SystemBaseMediumLowColor}" Visibility="Collapsed">
      <Grid.RenderTransform>
        <TranslateTransform />
      </Grid.RenderTransform>
      
      <Grid x:Name="DraggableTitleBarArea_Desktop" IsHitTestVisible="True" Background="Transparent">

      </Grid>
      <uwpControls:DockPanel>
        <Button Command="{Binding BackNavigationCommand}" uwpControls:DockPanel.Dock="Left" Height="32" Width="48" Style="{ThemeResource AccentButtonStyle}" Opacity="0.6">
          <SymbolIcon Symbol="Back">
            <SymbolIcon.RenderTransform>
              <ScaleTransform ScaleX="0.6" ScaleY="0.6" CenterX="10" CenterY="10" />
            </SymbolIcon.RenderTransform>
          </SymbolIcon>
        </Button>

        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Right" Margin="0 0 184 0" Spacing="8">
          <Button Height="40" Width="48" Background="Transparent" Flyout="{StaticResource SettingsFlyout}">
            <SymbolIcon Symbol="Setting" />
          </Button>
          <Border BorderBrush="{ThemeResource SystemBaseMediumLowColor}" BorderThickness="1 0 0 0" Margin="0 8" />
        </StackPanel>

        <uwpControls:DockPanel Padding="8 0">
          <Button Flyout="{StaticResource PageFlyout}" Background="Transparent" uwpControls:DockPanel.Dock="Right">
            <TextBlock uwpControls:DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="12" Margin="8 0 0 0" TextDecorations="Underline">
              <Run Text="{Binding PageFolderName}" /> - <Run Text="{Binding PageName}" /> - <Run Text="{Binding DisplayCurrentImageIndex.Value}" />/<Run Text="{Binding Images.Length}" />
            </TextBlock>

          </Button>
          <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12" IsHitTestVisible="False">
              <Run Text="{Binding Title}" />
          </TextBlock>
        </uwpControls:DockPanel>
      </uwpControls:DockPanel>
    </Grid>


    <VisualStateManager.VisualStateGroups>

      <!-- フルスクリーン -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompositeStateTrigger Operator="And">
              <wst:FullScreenModeTrigger IsFullScreen="True" />
              <myStateTriggers:PointerCollisionTrigger Target="{x:Bind RootGrid}" CollisionRect="0 0 5000 64" />
            </wst:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="0"
                               Storyboard.TargetName="Toolbar_Desktop"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
              <DoubleAnimation Duration="0:0:0.175"
                               To="32"
                               Storyboard.TargetName="ImagesContainer"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />

            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:FullScreenModeTrigger IsFullScreen="True" />
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="-32"
                               Storyboard.TargetName="Toolbar_Desktop"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
              <DoubleAnimation Duration="0:0:0.175"
                               To="0"
                               Storyboard.TargetName="ImagesContainer"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompositeStateTrigger Operator="And">
              <wst:UserInteractionModeTrigger InteractionMode="Mouse" />
              <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
            </wst:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImagesContainer.Margin" Value="0 32 0 0" />
            <Setter Target="Toolbar_Desktop.(UIElement.RenderTransform).(TranslateTransform.Y)" Value="0" />
            <Setter Target="ImagesContainer.(UIElement.RenderTransform).(TranslateTransform.Y)" Value="0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding NowDoubleImageView}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DoubleViewCorrectButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding ImageViewerSettings.IsLeftBindingView}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImageContainerPanel.FlowDirection" Value="LeftToRight" />
            <Setter Target="PageSelector.FlowDirection" Value="LeftToRight" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- スクロールのページ送りを逆にする -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding ImageViewerSettings.IsReverseImageFliping_MouseWheel}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DefaultMouseWheelTrigger.IsEnabled" Value="False" />
            <Setter Target="ReverseMouseWheelTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- 左右のページ送りを逆にする -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding ImageViewerSettings.IsReverseImageFliping_Button}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="LeftPageMoveButton.IsEnabled" Value="False" />
            <Setter Target="ReverseLeftPageMoveButton.IsEnabled" Value="True" />
            <Setter Target="RightPageMoveButton.IsEnabled" Value="False" />
            <Setter Target="ReverseRightPageMoveButton.IsEnabled" Value="True" />

            <Setter Target="GamePadLeftTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="ReverseGamePadLeftTriggerBehavior.IsEnabled" Value="True" />
            <Setter Target="GamePadRightTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="ReverseGamePadRightTriggerBehavior.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- アーカイブファイル内のフォルダ名表示の切り替え -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompareStateTrigger Value="{Binding PageFolderNames.Length}" CompareTo="1" Comparison="GreaterThan" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PageFolderNamesSelector.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- 左右移動を抑止する -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsOpenBottomMenu, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="GamePadLeftTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="GamePadRightTriggerBehavior.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- デスクトップ、タッチ、コントローラーそれぞれの表示切替 -->
      <VisualStateGroup>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{StaticResource DebugTVMode}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SwipeProcessScreen.Visibility" Value="Visible" />
            <Setter Target="AnimationUICommandBar.Padding" Value="80 32 80 64" />
          </VisualState.Setters>
        </VisualState>
        
        <VisualState>
          <VisualState.StateTriggers>
            <wst:UserInteractionModeTrigger InteractionMode="Touch" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SwipeProcessScreen.Visibility" Value="Visible" />
            <Setter Target="SwitchFullScreeMenuItem.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Toolbar_Desktop.Visibility" Value="Visible" />
            <Setter Target="SwitchFullScreeMenuItem.Visibility" Value="Visible" />
            
          </VisualState.Setters>
        </VisualState>

        

      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

  </Grid>
</Page>
