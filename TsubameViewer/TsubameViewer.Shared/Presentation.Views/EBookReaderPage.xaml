<Page
  x:Name="PageRoot"
    x:Class="TsubameViewer.Presentation.Views.EBookReaderPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TsubameViewer.Presentation.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:i="using:Microsoft.Xaml.Interactivity" 
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:winUI="using:Microsoft.UI.Xaml.Controls" 
  xmlns:myBehaviour="using:TsubameViewer.Presentation.Views.Behaviors" 
  xmlns:uiNavigation="using:TsubameViewer.Presentation.Views.UINavigation"
  xmlns:eBookControls="using:TsubameViewer.Presentation.Views.EBookControls" 
  xmlns:uwpControls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
  xmlns:wst="using:WindowsStateTriggers" 
  xmlns:myStateTriggers="using:TsubameViewer.Presentation.Views.StateTrigger"
  mc:Ignorable="d"
  
  >
  <Page.Transitions>
    <TransitionCollection>
      
    </TransitionCollection>
  </Page.Transitions>
  
  <Page.Resources>

    <DataTemplate x:Key="PixelUnitTextTemplate">
      <TextBlock>
        <Run Text="{Binding}" />px
      </TextBlock>
    </DataTemplate>
    
    <Flyout x:Key="SettingsFlyout" AllowFocusOnInteraction="True">
      <StackPanel Spacing="16" HorizontalAlignment="Right">

        <ToggleSwitch IsOn="{Binding EBookReaderSettings.IsReversePageFliping_Scroll, Mode=TwoWay}"
                      Header="{Binding Source=IsReversePageFliping_Scroll, Converter={StaticResource LocalizeConverter}}"
                      />
        <ToggleSwitch IsOn="{Binding EBookReaderSettings.IsReversePageFliping_Button, Mode=TwoWay}"
                      Header="{Binding Source=IsReversePageFliping_Button, Converter={StaticResource LocalizeConverter}}"
                      />

        <ComboBox ItemsSource="{Binding RootFontSizeItems}" SelectedItem="{Binding EBookReaderSettings.RootFontSizeInPixel, Mode=TwoWay}" 
                  Header="{Binding Source=FontSize, Converter={StaticResource LocalizeConverter}}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ItemTemplate="{StaticResource PixelUnitTextTemplate}"
                  ToolTipService.Placement="Right"
                >
          <ToolTipService.ToolTip>
            <ToolTip >
              <TextBlock Text="{Binding Source=DefaultWithParameter, Converter={StaticResource LocalizeConverter}, ConverterParameter={Binding Source=18px}}" />
            </ToolTip>
          </ToolTipService.ToolTip>
        </ComboBox>
        <ComboBox ItemsSource="{Binding LeffterSpacingItems}" SelectedItem="{Binding EBookReaderSettings.LetterSpacingInPixel, Mode=TwoWay}" 
                  Header="{Binding Source=LetterSpacing, Converter={StaticResource LocalizeConverter}}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ItemTemplate="{StaticResource PixelUnitTextTemplate}"
                  ToolTipService.Placement="Right"
                >
          <ToolTipService.ToolTip>
            <ToolTip >
              <TextBlock Text="{Binding Source=DefaultWithParameter, Converter={StaticResource LocalizeConverter}, ConverterParameter={Binding Source=0px}}" />
            </ToolTip>
          </ToolTipService.ToolTip>
        </ComboBox>
        <ComboBox ItemsSource="{Binding LineHeightItems}" SelectedItem="{Binding EBookReaderSettings.LineHeightInNoUnit, Mode=TwoWay}" 
                  Header="{Binding Source=LineHeight, Converter={StaticResource LocalizeConverter}}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ToolTipService.Placement="Right"
                >
          <ToolTipService.ToolTip>
            <ToolTip >
              <TextBlock Text="{Binding Source=DefaultWithParameter, Converter={StaticResource LocalizeConverter}, ConverterParameter={Binding Source=1.5}}" />
            </ToolTip>
          </ToolTipService.ToolTip>
        </ComboBox>
        <ComboBox ItemsSource="{Binding RubySizeItems}" SelectedItem="{Binding EBookReaderSettings.RubySizeInPixel, Mode=TwoWay}" 
                  Header="{Binding Source=RubyFontSize, Converter={StaticResource LocalizeConverter}}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ItemTemplate="{StaticResource PixelUnitTextTemplate}"
                  ToolTipService.Placement="Right"
                  ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource Mode=Self}}"
                >
          <ToolTipService.ToolTip>
            <ToolTip >
              <TextBlock Text="{Binding Source=DefaultWithParameter, Converter={StaticResource LocalizeConverter}, ConverterParameter={Binding Source=12px}}" />
            </ToolTip>
          </ToolTipService.ToolTip>
        </ComboBox>

        <ComboBox ItemsSource="{Binding SystemFontFamilies}" SelectedItem="{Binding EBookReaderSettings.FontFamily, Mode=TwoWay}" 
                  Header="{Binding Source=FontFamily, Converter={StaticResource LocalizeConverter}}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ToolTipService.Placement="Right"
                  ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource Mode=Self}}"
                >
          <ToolTipService.ToolTip>
            <ToolTip >
              <TextBlock Text="" />
            </ToolTip>
          </ToolTipService.ToolTip>
        </ComboBox>

        <ComboBox ItemsSource="{Binding SystemFontFamilies}" SelectedItem="{Binding EBookReaderSettings.RubyFontFamily, Mode=TwoWay}" 
                  Header="{Binding Source=RubyFontFamily, Converter={StaticResource LocalizeConverter}}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ToolTipService.Placement="Right"
                  ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource Mode=Self}}"
                >
          <ToolTipService.ToolTip>
            <ToolTip >
              <TextBlock Text="" />
            </ToolTip>
          </ToolTipService.ToolTip>
        </ComboBox>


        <StackPanel HorizontalAlignment="Stretch">
          <TextBlock Text="{Binding Source=BackgroundColor, Converter={StaticResource LocalizeConverter}}" HorizontalAlignment="Left" />
          <Button HorizontalContentAlignment="Center" HorizontalAlignment="Stretch">
            <Grid>
              <TextBlock Text="{Binding Source=ChangeBackgroundColor, Converter={StaticResource LocalizeConverter}}" />
            </Grid>

            <Button.Flyout>
              <Flyout Placement="Left" Opening="BackgroundColorPickerFlyout_Opening">
                <ColorPicker Color="{Binding EBookReaderSettings.BackgroundColor, Mode=TwoWay}"
                               >

                </ColorPicker>
              </Flyout>
            </Button.Flyout>
          </Button>
        </StackPanel>

        <StackPanel HorizontalAlignment="Stretch">
          <TextBlock Text="{Binding Source=ForegroundColor, Converter={StaticResource LocalizeConverter}}" HorizontalAlignment="Left" />
          <Button HorizontalContentAlignment="Center" HorizontalAlignment="Stretch">
            <Grid>
              <TextBlock Text="{Binding Source=ChangeForegroundColor, Converter={StaticResource LocalizeConverter}}" />
            </Grid>
            <Button.Flyout>
              <Flyout Placement="Left" Opening="ForegroundColorPickerFlyout_Opening">
                <ColorPicker Color="{Binding EBookReaderSettings.ForegroundColor, Mode=TwoWay, Converter={StaticResource NullableColorConverter}}"
                             >

                </ColorPicker>
              </Flyout>
            </Button.Flyout>
          </Button>
        </StackPanel>

        <Border BorderBrush="{ThemeResource SystemAltHighColor}" BorderThickness="0 1 0 0" Margin="16 16" />

        <Button Content="{Binding Source=ResetEBookSettings, Converter={StaticResource LocalizeConverter}}" 
                HorizontalAlignment="Stretch"
                Command="{Binding ResetEBookReaderSettingsCommand}"
                />
      </StackPanel>
    </Flyout>

    <MenuFlyout x:Key="DesktopViewManagementFlyout">
      <MenuFlyoutItem Text="{Binding Source=SwitchFullScreen, Converter={StaticResource LocalizeConverter}}" Command="{Binding ToggleFullScreenCommand}"
                      x:Name="SwitchFullScreeMenuItem"
                      Visibility="Collapsed"
                      >
        <MenuFlyoutItem.KeyboardAccelerators>
          <KeyboardAccelerator Key="F11" IsEnabled="False" />
        </MenuFlyoutItem.KeyboardAccelerators>
      </MenuFlyoutItem>
    </MenuFlyout>
  </Page.Resources>

  <Grid x:Name="RootGrid" Background="{Binding EBookReaderSettings.BackgroundColor, Converter={StaticResource ColorToBrush}}"
        ContextFlyout="{StaticResource DesktopViewManagementFlyout}"
        >

    <i:Interaction.Behaviors>
      
      <!-- Mouse Input-->
      <myBehaviour:MouseWheelTrigger x:Name="DefaultMouseWheelTrigger">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{x:Bind InnerGoPrevImageCommand}" />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{x:Bind InnerGoNextImageCommand}" />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>
      <myBehaviour:MouseWheelTrigger x:Name="ReverseMouseWheelTrigger" IsEnabled="False">
        <myBehaviour:MouseWheelTrigger.UpActions>
          <core:InvokeCommandAction Command="{x:Bind InnerGoNextImageCommand}" />
        </myBehaviour:MouseWheelTrigger.UpActions>
        <myBehaviour:MouseWheelTrigger.DownActions>
          <core:InvokeCommandAction Command="{x:Bind InnerGoPrevImageCommand}" />
        </myBehaviour:MouseWheelTrigger.DownActions>
      </myBehaviour:MouseWheelTrigger>

      <myBehaviour:MouseCenterClickTrigger>
        <core:InvokeCommandAction Command="{Binding ToggleFullScreenCommand}" />
      </myBehaviour:MouseCenterClickTrigger>

      <!-- GamePad Input-->
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadLeftTriggerBehavior" Kind="Left" IsRequireFocus="True">
        <core:InvokeCommandAction Command="{x:Bind InnerGoNextImageCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="GamePadRightTriggerBehavior" Kind="Right" IsRequireFocus="True">
        <core:InvokeCommandAction Command="{x:Bind InnerGoPrevImageCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="ReverseGamePadLeftTriggerBehavior" Kind="Left" IsRequireFocus="True" IsEnabled="False">
        <core:InvokeCommandAction Command="{x:Bind InnerGoPrevImageCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>
      <uiNavigation:UINavigationTriggerBehavior x:Name="ReverseGamePadRightTriggerBehavior" Kind="Right" IsRequireFocus="True" IsEnabled="False">
        <core:InvokeCommandAction Command="{x:Bind InnerGoNextImageCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>

      <uiNavigation:UINavigationTriggerBehavior Kind="Menu">
        <core:InvokeCommandAction x:Name="GamePadBottomUIToggleAction" Command="{Binding ElementName=PageRoot, Path=OpenTocPaneCommand}" />
      </uiNavigation:UINavigationTriggerBehavior>


    </i:Interaction.Behaviors>

    <!-- ContextFlyout のMenuFlyoutItem.KeyboardAccelerators はFlyoutが表示されてからでないと反応しない
         そのため、非表示のButtonのKeyboardAcceleratorsを利用する
    -->
    <Button Command="{Binding ToggleFullScreenCommand}" Width="0" Height="0" MinHeight="0" MinWidth="0" Opacity="0.0" IsTabStop="False">
      <Button.KeyboardAccelerators>
        <KeyboardAccelerator Key="F11" />
      </Button.KeyboardAccelerators>
    </Button>
    
    <!-- 電子書籍ビューワー -->
    <eBookControls:EPubRenderer x:Name="WebView"
                                PageHtml="{Binding PageHtml}"
                                FirstApproachingPageIndex="{Binding InnerCurrentImageIndex, Mode=OneWay}"
                               IsTapEnabled="False"
                               IsHitTestVisible="False"
                               IsAccessKeyScope="False"
                               AllowFocusOnInteraction="False"
                               Margin="32 48 24 48"
                               PageBackgroundColor="{Binding EBookReaderSettings.BackgroundColor}"
                                FontColor="{Binding EBookReaderSettings.ForegroundColor, Converter={StaticResource NullableColorConverter}}"
                                FontSize="{Binding EBookReaderSettings.RootFontSizeInPixel}"
                                LetterSpacingInPixel="{Binding EBookReaderSettings.LetterSpacingInPixel}"
                                LineHeightInNoUnit="{Binding EBookReaderSettings.LineHeightInNoUnit}"
                                RubyFontSizeInPixel="{Binding EBookReaderSettings.RubySizeInPixel}"
                                ContentsFontFamily="{Binding EBookReaderSettings.FontFamily}"
                                RubyFontFamily="{Binding EBookReaderSettings.RubyFontFamily}"
             >
      
    </eBookControls:EPubRenderer>

    <!-- コントロールUI（共通）-->
    <Grid x:Name="UIContainer"
          IsHitTestVisible="True" 
          Background="Transparent"
          Margin="0 48 0 32" 
          >
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="3*" />
        <ColumnDefinition Width="4*" />
        <ColumnDefinition Width="3*" />
      </Grid.ColumnDefinitions>
      <Button x:Name="LeftPageMoveButton"
        Command="{x:Bind InnerGoNextImageCommand}"
              Grid.Column="0"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Left" />
          <KeyboardAccelerator Key="LeftButton" />
        </Button.KeyboardAccelerators>

        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
          <SymbolIcon Symbol="Back" />
        </Border>

      </Button>
      <Button x:Name="ReverseLeftPageMoveButton"
        Command="{x:Bind InnerGoNextImageCommand}"
              Grid.Column="0"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              IsEnabled="False"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Left" />
          <KeyboardAccelerator Key="LeftButton" />
        </Button.KeyboardAccelerators>

        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
          <SymbolIcon Symbol="Back" />
        </Border>

      </Button>

      <Button x:Name="ToggleBottomMenuButton"
              Command="{x:Bind ToggleBottomMenuCommand}" 
              Grid.Column="1"
              Grid.ColumnSpan="1"
              Opacity="0" 
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden" />

      <Button x:Name="RightPageMoveButton"
        Command="{Binding ElementName=PageRoot, Path=InnerGoPrevImageCommand}"
              Grid.Column="2"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Right" />
          <KeyboardAccelerator Key="RightButton" />

        </Button.KeyboardAccelerators>

        <SymbolIcon Symbol="Forward" />
      </Button>
      <Button x:Name="ReverseRightPageMoveButton"
        Command="{Binding ElementName=PageRoot, Path=InnerGoPrevImageCommand}"
              Grid.Column="2"
              Opacity="0"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              KeyboardAcceleratorPlacementMode="Hidden"
              IsEnabled="False"
              >
        <Button.KeyboardAccelerators>
          <KeyboardAccelerator Key="Right" />
          <KeyboardAccelerator Key="RightButton" />

        </Button.KeyboardAccelerators>

        <SymbolIcon Symbol="Forward" />
      </Button>

    </Grid>
    
    
    <!-- デバッグ -->
    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Opacity="0.5"
                x:Name="DebugPanel"
                Visibility="Collapsed"
                >
    </StackPanel>

    <!-- 補助コントロールUI（コントローラーとタッチ操作） -->
    <Grid x:Name="SwipeProcessScreen" Background="Transparent" IsHitTestVisible="True" Visibility="Collapsed">
      <Grid x:Name="AnimationUIContainer" Background="{ThemeResource SystemAltMediumLowColor}" Opacity="0"          
          >

      </Grid>

      <uwpControls:DockPanel x:Name="AnimationUICommandBar" VerticalAlignment="Bottom" Padding="32" Background="{ThemeResource SystemChromeAltHighColor}" IsHitTestVisible="True">


        <TextBlock uwpControls:DockPanel.Dock="Top" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" MaxLines="3" VerticalAlignment="Center" FontSize="16" Margin="16 16 16 48"
                   Opacity="0.8"
                   >
              <Run Text="{Binding Title}" />
        </TextBlock>

        
        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Left" >
          <Button x:Name="BottomUIBackNavigationButton" Command="{Binding BackNavigationCommand}" Height="48" Width="60"
                  XYFocusRight="{x:Bind ImageNavigationFlyoutButton}"
                  >
            <SymbolIcon Symbol="Back">
              <SymbolIcon.RenderTransform>
                <ScaleTransform ScaleX="0.6" ScaleY="0.6" CenterX="10" CenterY="10" />
              </SymbolIcon.RenderTransform>
            </SymbolIcon>
          </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Right" Spacing="16">
          
          <Button x:Name="BottomUISettingsFlyoutButton" Flyout="{StaticResource SettingsFlyout}" Height="48" Width="60"
                  XYFocusLeft="{x:Bind ImageNavigationFlyoutButton}"
                  >
            <SymbolIcon Symbol="Setting" />
          </Button>

        </StackPanel>

        <Button x:Name="ImageNavigationFlyoutButton" Command="{x:Bind OpenTocPaneCommand}" Height="48" Background="Transparent" 
                  XYFocusLeft="{x:Bind BottomUIBackNavigationButton}"
                  XYFocusRight="{x:Bind BottomUISettingsFlyoutButton}"
                  >
          <TextBlock uwpControls:DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="16" Margin="8 0 0 0" TextDecorations="Underline">
                    <Run Text="{Binding CurrentPageTitle}" /> - <Run Text="{Binding DisplayInnerCurrentImageIndex.Value}" />/<Run Text="{Binding InnerImageTotalCount}" />
          </TextBlock>

        </Button>


      </uwpControls:DockPanel>
    </Grid>


    <!-- 補助コントロールUI（デスクトップ） -->
    <Grid Height="32" x:Name="Toolbar_Desktop" VerticalAlignment="Top" Opacity="0.75" Background="{ThemeResource SystemBaseMediumLowColor}" Visibility="Collapsed">
      <Grid.RenderTransform>
        <TranslateTransform />
      </Grid.RenderTransform>
      
      <Grid x:Name="DraggableTitleBarArea_Desktop" IsHitTestVisible="True" Background="Transparent">
        
      </Grid>
      <uwpControls:DockPanel>
        <Button Command="{Binding BackNavigationCommand}" uwpControls:DockPanel.Dock="Left" Height="32" Width="48" Style="{ThemeResource AccentButtonStyle}" Opacity="0.6">
          <SymbolIcon Symbol="Back">
            <SymbolIcon.RenderTransform>
              <ScaleTransform ScaleX="0.6" ScaleY="0.6" CenterX="10" CenterY="10" />
            </SymbolIcon.RenderTransform>
          </SymbolIcon>
        </Button>

        <StackPanel Orientation="Horizontal" uwpControls:DockPanel.Dock="Right" Margin="0 0 184 0" Spacing="8">
          <Button Height="40" Width="48" Background="Transparent" Flyout="{StaticResource SettingsFlyout}">
            <SymbolIcon Symbol="Setting" />
          </Button>
          <Border BorderBrush="{ThemeResource SystemBaseMediumLowColor}" BorderThickness="1 0 0 0" Margin="0 8" />
        </StackPanel>

        <uwpControls:DockPanel Padding="8 0" >
          <Button Command="{x:Bind OpenTocPaneCommand}" uwpControls:DockPanel.Dock="Right" Margin="8 0 0 0">
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="12" TextDecorations="Underline" >
              <Run Text="{Binding CurrentPageTitle}" /> - <Run Text="{Binding DisplayInnerCurrentImageIndex.Value}" />/<Run Text="{Binding InnerImageTotalCount}" />
            </TextBlock>
          </Button>

          <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12" IsHitTestVisible="False">
              <Run Text="{Binding Title}" />
          </TextBlock>
        </uwpControls:DockPanel>
      </uwpControls:DockPanel>
    </Grid>

    <!-- Toc -->
    <Grid x:Name="TocContainer" Visibility="Collapsed">
      <Grid x:Name="TocBackgroundPanel" Background="{ThemeResource SystemAltMediumLowColor}"  IsHitTestVisible="True">
        <i:Interaction.Behaviors>
          <core:EventTriggerBehavior EventName="Tapped">
            <core:InvokeCommandAction Command="{x:Bind CloseTocPaneCommand}" />
          </core:EventTriggerBehavior>
          <core:DataTriggerBehavior Binding="{Binding CurrentImageIndex}" Value="{x:Null}" ComparisonCondition="NotEqual">
            <core:InvokeCommandAction Command="{x:Bind CloseTocPaneCommand}" />
          </core:DataTriggerBehavior>

        </i:Interaction.Behaviors>
      </Grid>
      <Grid x:Name="TocContentPanel" MaxWidth="320" HorizontalAlignment="Left" >

        <ListView x:Name="TocItemsListView"
                  ItemsSource="{Binding TocItems}"
                  SelectedItem="{Binding SelectedTocItem, Mode=TwoWay}"
                  Background="{ThemeResource SystemChromeLowColor}"
                  SelectionMode="Single"
                  SingleSelectionFollowsFocus="False"
                  Padding="0 48 0 0"
                  >
          <ListView.Header>
            <ContentControl Tapped="CoverImage_Tapped">
              <Image Source="{Binding CoverImage}" Height="160" Margin="8" VerticalAlignment="Top" Stretch="UniformToFill" />
            </ContentControl>
          </ListView.Header>
          <ListView.ItemTemplate>
            <DataTemplate >
              <TextBlock Text="{Binding Label}" TextTrimming="CharacterEllipsis" />
            </DataTemplate>
          </ListView.ItemTemplate>

          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="Tapped">
              <core:CallMethodAction TargetObject="{x:Bind WebView}" MethodName="PrepareTocSelectionChange" />
              <core:CallMethodAction TargetObject="{Binding}" MethodName="UpdateFromCurrentTocItem" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>

        </ListView>
      </Grid>
    </Grid>



    <VisualStateManager.VisualStateGroups>

      <!-- フルスクリーン -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:CompositeStateTrigger Operator="And">
              <wst:FullScreenModeTrigger IsFullScreen="True" />
              <myStateTriggers:PointerCollisionTrigger Target="{x:Bind RootGrid}" CollisionRect="0 0 5000 64" />
            </wst:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="0"
                               Storyboard.TargetName="Toolbar_Desktop"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:FullScreenModeTrigger IsFullScreen="True" />
          </VisualState.StateTriggers>
          <VisualState.Storyboard>
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.175"
                               To="-32"
                               Storyboard.TargetName="Toolbar_Desktop"
                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                               />
            </Storyboard>
          </VisualState.Storyboard>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:UserInteractionModeTrigger InteractionMode="Mouse" />
            <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="WebView.Margin" Value="32 72 24 48" />
            <Setter Target="Toolbar_Desktop.(UIElement.RenderTransform).(TranslateTransform.Y)" Value="0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- スクロールのページ送りを逆にする -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding EBookReaderSettings.IsReversePageFliping_Scroll}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>

            <Setter Target="DefaultMouseWheelTrigger.IsEnabled" Value="False" />
            <Setter Target="ReverseMouseWheelTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- 左右のページ送りを逆にする -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding EBookReaderSettings.IsReversePageFliping_Button}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="LeftPageMoveButton.IsEnabled" Value="False" />
            <Setter Target="ReverseLeftPageMoveButton.IsEnabled" Value="True" />
            <Setter Target="RightPageMoveButton.IsEnabled" Value="False" />
            <Setter Target="ReverseRightPageMoveButton.IsEnabled" Value="True" />

            <Setter Target="GamePadLeftTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="ReverseGamePadLeftTriggerBehavior.IsEnabled" Value="True" />
            <Setter Target="GamePadRightTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="ReverseGamePadRightTriggerBehavior.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      
      <!-- 左右移動を抑止する -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind IsOpenBottomMenu, Mode=OneWay}" />
            <wst:EqualsStateTrigger Value="{x:Bind TocContainer.Visibility, Mode=OneWay}">
              <wst:EqualsStateTrigger.EqualTo>
                <Visibility>Visible</Visibility>
              </wst:EqualsStateTrigger.EqualTo>
            </wst:EqualsStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="GamePadLeftTriggerBehavior.IsEnabled" Value="False" />
            <Setter Target="GamePadRightTriggerBehavior.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <!-- デスクトップ、タッチ、コントローラーそれぞれの表示切替 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{StaticResource DebugTVMode}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SwipeProcessScreen.Visibility" Value="Visible" />
            <Setter Target="AnimationUICommandBar.Padding" Value="80 32 80 64" />
            <Setter Target="TocItemsListView.Padding" Value="48 27 8 27" />
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:UserInteractionModeTrigger InteractionMode="Touch" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SwipeProcessScreen.Visibility" Value="Visible" />
            <Setter Target="SwitchFullScreeMenuItem.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Toolbar_Desktop.Visibility" Value="Visible" />
            <Setter Target="SwitchFullScreeMenuItem.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        

      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

  </Grid>
</Page>
